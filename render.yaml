databases:
  - name: cleanandflip-db
    plan: free

services:
  # Development/Staging service (deploys from 'development' branch)
  - type: web
    name: CleanAndFlip-Dev
    env: node
    plan: free
    branch: development
    rootDir: .
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm run start
    postdeployCommand: npm run db:push
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: NODE_ENV
        value: production
      - key: APP_ENV
        value: development
      - key: NPM_CONFIG_PRODUCTION
        value: "false"
      - key: SERVE_STATIC
        value: "true"
      - key: RUN_MIGRATIONS
        value: "false"
      - key: SESSION_SECRET
        generateValue: true
      - key: STRIPE_SECRET_KEY
        value: sk_test_change_me
      - key: STRIPE_WEBHOOK_SECRET
        value: whsec_change_me
      - key: ENABLE_REDIS
        value: "false"
      - key: FRONTEND_ORIGIN
        value: https://cleanandflip-dev.onrender.com
      - key: DATABASE_URL
        value: "${NEON_DEV_DATABASE_URL}"

  # Production service (deploys from 'main' branch)
  - type: web
    name: CleanAndFlip-Prod
    env: node
    plan: free
    branch: main
    rootDir: .
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm run start
    postdeployCommand: npm run db:push
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: NODE_ENV
        value: production
      - key: APP_ENV
        value: production
      - key: NPM_CONFIG_PRODUCTION
        value: "false"
      - key: SERVE_STATIC
        value: "true"
      - key: RUN_MIGRATIONS
        value: "false"
      - key: SESSION_SECRET
        generateValue: true
      - key: STRIPE_SECRET_KEY
        value: sk_live_change_me
      - key: STRIPE_WEBHOOK_SECRET
        value: whsec_live_change_me
      - key: ENABLE_REDIS
        value: "false"
      - key: FRONTEND_ORIGIN
        value: https://cleanandflip.com
      - key: DATABASE_URL
        value: "${NEON_PROD_DATABASE_URL}"
