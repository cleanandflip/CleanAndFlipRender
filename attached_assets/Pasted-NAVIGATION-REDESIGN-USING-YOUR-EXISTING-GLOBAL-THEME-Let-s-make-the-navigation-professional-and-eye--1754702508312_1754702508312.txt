NAVIGATION REDESIGN USING YOUR EXISTING GLOBAL THEME
Let's make the navigation professional and eye-catching using YOUR current theme system properly.

REPLIT INSTRUCTIONS - LEVERAGE EXISTING THEME:
markdown## PROFESSIONAL NAVIGATION USING OUR GLOBAL THEME

### CHECK EXISTING THEME FILE: `/client/src/styles/globals.css`
First, identify all our existing CSS variables and theme colors:
- Background colors (--bg-primary, --bg-secondary, etc.)
- Text colors (--text-primary, --text-secondary, etc.)
- Border colors
- Any gradients we're already using

### FILE TO UPDATE: `/client/src/components/Navigation.tsx`

### APPLY OUR THEME CONSISTENTLY:

#### 1. NAVIGATION CONTAINER
Use our existing dark theme gradient and glass effect:
```jsx
<nav className="bg-[#0f172a]/95 backdrop-blur-md border-b border-gray-800/30 sticky top-0 z-50">
  <div className="container mx-auto px-6">
    <div className="h-16 flex items-center justify-between">
2. LOGO - USE OUR BRAND STYLING
Apply the same gradient/styling used in our admin dashboard:
jsx<Link href="/" className="flex items-center gap-3 group">
  {/* Use the same gradient effect from our metric cards */}
  <div className="relative">
    <div className="absolute inset-0 bg-gradient-to-br from-blue-500/20 to-purple-600/20 blur-xl group-hover:blur-2xl transition-all" />
    <div className="relative bg-[#1e293b] border border-gray-700/50 rounded-lg px-3 py-2 group-hover:border-gray-600/50 transition-all">
      <span className="text-white font-bold text-lg">C&F</span>
    </div>
  </div>
  <div className="hidden sm:block">
    <div className="text-white font-semibold">CLEAN & FLIP</div>
    <div className="text-gray-400 text-xs">Premium Sports Gear</div>
  </div>
</Link>
3. NAV LINKS - MATCH OUR TAB STYLING
Use the same active/hover states as our admin dashboard tabs:
jsx<div className="hidden md:flex items-center gap-2">
  {navLinks.map(link => (
    <Link key={link.href} href={link.href}>
      <a className={`
        px-4 py-2 rounded-lg font-medium text-sm transition-all
        ${link.active 
          ? 'bg-white/10 text-white border border-gray-700/50' 
          : 'text-gray-400 hover:text-white hover:bg-white/5'
        }
      `}>
        {link.label}
      </a>
    </Link>
  ))}
</div>
4. SEARCH BAR - MATCH OUR INPUT STYLING
Use the same input styling from our forms:
jsx<div className="relative flex-1 max-w-md mx-6">
  <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-500" />
  <input
    type="text"
    placeholder="Search equipment..."
    className="w-full pl-10 pr-4 py-2 
               bg-[#1e293b]/50 border border-gray-700/50 
               rounded-lg text-white placeholder-gray-500
               focus:bg-[#1e293b] focus:border-blue-500/50 
               focus:ring-2 focus:ring-blue-500/20
               transition-all duration-200"
  />
</div>
5. USER DROPDOWN BUTTON - PROFESSIONAL AVATAR
Match our existing user avatars in the admin panel:
jsx<button 
  onClick={() => setDropdownOpen(!dropdownOpen)}
  className="flex items-center gap-2 px-3 py-1.5 
             rounded-lg hover:bg-white/5 transition-all group"
>
  {/* Same gradient avatar as admin users table */}
  <div className="relative">
    <div className="w-9 h-9 bg-gradient-to-br from-blue-500 to-purple-600 
                    rounded-lg flex items-center justify-center shadow-lg
                    group-hover:shadow-blue-500/25 transition-all">
      <span className="text-white font-bold text-sm">
        {user.email?.[0]?.toUpperCase() || 'U'}
      </span>
    </div>
    {/* Developer indicator dot */}
    {user.role === 'developer' && (
      <div className="absolute -bottom-0.5 -right-0.5 w-3 h-3 
                      bg-purple-500 rounded-full 
                      border-2 border-[#0f172a]" />
    )}
  </div>
  <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform duration-200
                          ${dropdownOpen ? 'rotate-180' : ''}`} />
</button>
6. DROPDOWN MENU - MATCH OUR MODAL STYLING
Use the same styling as our admin modals:
jsx{dropdownOpen && (
  <div className="absolute right-0 mt-2 w-72 
                  bg-[#1e293b]/95 backdrop-blur-md
                  border border-gray-700/50 
                  rounded-xl shadow-2xl overflow-hidden
                  animate-slideDown">
    
    {/* Header - Match our card headers */}
    <div className="px-4 py-3 bg-gradient-to-r from-blue-500/10 to-purple-500/10 
                    border-b border-gray-700/50">
      <div className="flex items-center gap-3">
        <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 
                        rounded-lg flex items-center justify-center">
          <span className="text-white font-bold">
            {user.email?.[0]?.toUpperCase()}
          </span>
        </div>
        <div className="flex-1">
          <div className="text-white font-medium">{user.username || 'User'}</div>
          <div className="text-gray-400 text-xs">{user.email}</div>
        </div>
      </div>
      {user.role === 'developer' && (
        <div className="mt-2">
          <span className="inline-flex items-center gap-1 px-2 py-0.5 
                         bg-purple-500/20 text-purple-400 
                         text-xs font-medium rounded-full">
            <Code className="w-3 h-3" />
            Developer Access
          </span>
        </div>
      )}
    </div>
    
    {/* Menu Items - Match our sidebar styling */}
    <div className="py-2">
      <Link href="/dashboard">
        <a className="flex items-center gap-3 px-4 py-2.5 
                      text-gray-300 hover:bg-white/5 hover:text-white 
                      transition-all group">
          <div className="p-1.5 bg-white/5 rounded-lg 
                         group-hover:bg-white/10 transition-all">
            <Grid3x3 className="w-4 h-4" />
          </div>
          <span className="text-sm">Dashboard</span>
        </a>
      </Link>
      
      <Link href="/orders">
        <a className="flex items-center gap-3 px-4 py-2.5 
                      text-gray-300 hover:bg-white/5 hover:text-white 
                      transition-all group">
          <div className="p-1.5 bg-white/5 rounded-lg 
                         group-hover:bg-white/10 transition-all">
            <History className="w-4 h-4" />
          </div>
          <span className="text-sm">Order History</span>
        </a>
      </Link>
      
      {user.role === 'developer' && (
        <>
          <div className="my-2 mx-4 border-t border-gray-700/30" />
          <Link href="/admin">
            <a className="flex items-center gap-3 px-4 py-2.5 
                          text-purple-400 hover:bg-purple-500/10 
                          transition-all group">
              <div className="p-1.5 bg-purple-500/10 rounded-lg 
                             group-hover:bg-purple-500/20 transition-all">
                <Code className="w-4 h-4" />
              </div>
              <span className="text-sm">Developer Dashboard</span>
            </a>
          </Link>
        </>
      )}
      
      <div className="my-2 mx-4 border-t border-gray-700/30" />
      
      <button onClick={handleLogout}
              className="w-full flex items-center gap-3 px-4 py-2.5 
                         text-red-400 hover:bg-red-500/10 
                         transition-all group">
        <div className="p-1.5 bg-red-500/10 rounded-lg 
                       group-hover:bg-red-500/20 transition-all">
          <LogOut className="w-4 h-4" />
        </div>
        <span className="text-sm">Sign Out</span>
      </button>
    </div>
  </div>
)}
7. CART BUTTON - MATCH OUR BADGE STYLING
jsx<Link href="/cart">
  <a className="relative p-2 rounded-lg hover:bg-white/5 transition-all group">
    <ShoppingCart className="w-5 h-5 text-gray-300 group-hover:text-white" />
    {itemCount > 0 && (
      <span className="absolute -top-1 -right-1 
                       min-w-[20px] h-5 px-1
                       bg-gradient-to-r from-red-500 to-pink-500 
                       text-white text-xs font-bold 
                       rounded-full flex items-center justify-center
                       shadow-lg shadow-red-500/25">
        {itemCount}
      </span>
    )}
  </a>
</Link>
ADD TO GLOBALS.CSS (if not already there):
css/* Glass effect */
.backdrop-blur-md {
  backdrop-filter: blur(12px);
}

/* Smooth animations */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-slideDown {
  animation: slideDown 0.2s ease-out;
}

/* Focus rings */
.focus\:ring-2:focus {
  box-shadow: 0 0 0 2px var(--ring-color, rgba(59, 130, 246, 0.2));
}
KEY THEME CONSISTENCY POINTS:

✅ Use bg-[#0f172a] as base (matching your admin panel)
✅ Use bg-[#1e293b] for elevated surfaces (cards, dropdowns)
✅ Blue-to-purple gradients for CTAs and avatars
✅ Gray-700/50 for borders (50% opacity for subtlety)
✅ White/5 and white/10 for hover states
✅ Purple accents for developer-specific items
✅ Red gradient for notifications/warnings
✅ Consistent rounded-lg (8px radius) everywhere
✅ Shadow-lg with colored shadows for depth
✅ Backdrop blur for glass morphism effect

PROFESSIONAL TOUCHES:

Icon containers with subtle backgrounds
Gradient shadows under important elements
Smooth transitions (200ms duration)
Consistent spacing (gap-3 for items, py-2.5 for menu items)
Visual hierarchy with proper contrast
Micro-interactions (chevron rotation, hover states)
Status indicators (developer dot, cart badge)

This will make your navigation look cohesive with your admin panel and give it that premium, professional feel using YOUR existing design system.