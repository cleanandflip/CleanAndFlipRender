Replit — make these exact edits
1) Fix /api/products/featured 500 (“Cannot convert undefined or null to object”)
Why it’s failing: the route is calling db.select(selectedFields) where selectedFields is undefined/null. Drizzle’s db.select() must be called with no arg when you don’t have a fields map; passing undefined triggers the stack you see (orderSelectedFields → Object.entries).

File: server/routes.ts (or wherever the featured route lives)

Find the featured handler that looks roughly like this:

ts
Copy
Edit
// current (broken)
const rows = await db
  .select(selectedFields)           // <- selectedFields can be undefined
  .from(products)
  .where(and(eq(products.status, 'active'), eq(products.featured, true)))
  .orderBy(desc(products.updatedAt))
  .limit(12);
Change it to guard the select arg (no new code, just adjust):

ts
Copy
Edit
// fix: call select() with NO argument if you don't have a fields object
const sel = selectedFields && Object.keys(selectedFields).length ? selectedFields : undefined;

const q = sel ? db.select(sel) : db.select();

const rows = await q
  .from(products)
  .where(and(eq(products.status, 'active'), eq(products.featured, true)))
  .orderBy(desc(products.updatedAt))
  .limit(12);

res.json(rows);
If you build selectedFields via a helper (e.g., getSelectedFields(req)), also change that helper to return undefined instead of null or {} when nothing is requested.

One-line alternative (also fine):

ts
Copy
Edit
const rows = await (selectedFields ? db.select(selectedFields) : db.select())
  .from(products)
  .where(and(eq(products.status, 'active'), eq(products.featured, true)))
  .orderBy(desc(products.updatedAt))
  .limit(12);
That removes the Object.entries(undefined) crash and the route will return 200 with data.

2) Fix Admin → Users tab runtime error
ReferenceError: lastMessage is not defined (at src/pages/admin/UsersTab.tsx:65)

Why it’s failing: the component references lastMessage but never defines it (likely a leftover after switching to the socket singleton).

File: src/pages/admin/UsersTab.tsx

Make both of these edits:

Add the hook call (top of component):

tsx
Copy
Edit
import useWebSocketState from '@/hooks/useWebSocketState'; // keep existing imports

export default function UsersTab() {
  const { lastMessage } = useWebSocketState(); // <-- add this line
  // ...rest of component
}
Guard its usage so it never throws:
Wherever you render it (around line ~65), replace direct usage with a safe render:

tsx
Copy
Edit
{/* before (crashes if lastMessage is undefined) */}
{/* <pre>{lastMessage.data}</pre> */}

{/* after */}
<pre>{lastMessage ? JSON.stringify(lastMessage, null, 2) : '—'}</pre>
(If you already import useWebSocketState but forgot to call it, just add the const { lastMessage } = useWebSocketState(); line and keep the guarded render.)

Quick check after edits
Load /api/products/featured in the browser/Network tab → should be 200 with an array (not 500).

Open Admin → Users → the page renders without the “Something went wrong / boundary…” error.

Home/products page should no longer spam featured 500s in the server logs.