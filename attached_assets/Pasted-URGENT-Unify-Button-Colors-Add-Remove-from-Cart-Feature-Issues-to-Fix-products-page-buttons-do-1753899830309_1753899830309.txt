URGENT: Unify Button Colors & Add Remove-from-Cart Feature
Issues to Fix:

/products page buttons don't match product page colors
Need quick remove-from-cart option on green "In Cart" buttons
Wishlist buttons inconsistent between pages

1. FIX ADD TO CART BUTTON COLORS:
javascript// ProductCard.jsx - Update button colors to match product page
const AddToCartButton = ({ productId, isInCart }) => {
  if (isInCart) {
    return (
      <button className="relative w-full bg-green-600 hover:bg-green-700 text-white py-2.5 px-4 rounded-lg font-medium transition-all flex items-center justify-center group">
        <Check className="w-4 h-4 mr-2" />
        <span>In Cart - View</span>
        
        {/* Small remove button on hover */}
        <button
          onClick={(e) => {
            e.stopPropagation();
            e.preventDefault();
            removeFromCart(productId);
          }}
          className="absolute right-2 opacity-0 group-hover:opacity-100 transition-opacity bg-red-500 hover:bg-red-600 text-white w-6 h-6 rounded-full flex items-center justify-center"
          title="Remove from cart"
        >
          <X className="w-3 h-3" />
        </button>
      </button>
    );
  }
  
  return (
    <button className="w-full bg-blue-500 hover:bg-blue-600 text-white py-2.5 px-4 rounded-lg font-medium transition-all flex items-center justify-center">
      <ShoppingCart className="w-4 h-4 mr-2" />
      Add to Cart
    </button>
  );
};
2. EXACT WISHLIST BUTTON FOR BOTH PAGES:
javascript// Unified WishlistButton component - use EVERYWHERE
const WishlistButton = ({ productId, size = 'default' }) => {
  const [isWishlisted, setIsWishlisted] = useState(false);
  
  const sizeClasses = {
    small: 'w-8 h-8',    // For product cards
    default: 'w-10 h-10' // For product page
  };
  
  return (
    <button
      onClick={handleWishlistToggle}
      className={`${sizeClasses[size]} rounded-full flex items-center justify-center transition-all
        ${isWishlisted 
          ? 'bg-red-500 text-white shadow-lg scale-110' 
          : 'bg-gray-600/50 backdrop-blur text-gray-300 hover:bg-gray-500/50 hover:scale-105'
        }`}
    >
      <Heart 
        className={size === 'small' ? 'w-4 h-4' : 'w-5 h-5'}
        fill={isWishlisted ? 'currentColor' : 'none'}
      />
    </button>
  );
};
3. UPDATE PRODUCT CARD LAYOUT:
javascript// ProductCard.jsx - Complete update
const ProductCard = ({ product }) => {
  const { isInCart } = useCart();
  const inCart = isInCart(product.id);
  
  return (
    <div className="group relative bg-gray-800/30 rounded-lg overflow-hidden">
      {/* Only 1 left badge */}
      {product.stock === 1 && (
        <div className="absolute top-3 left-3 z-10">
          <span className="bg-red-500 text-white px-2 py-1 rounded text-xs">
            Only 1 left
          </span>
        </div>
      )}
      
      {/* Wishlist button - EXACT same as product page */}
      <div className="absolute top-3 right-3 z-10">
        <WishlistButton productId={product.id} size="small" />
      </div>
      
      <Link href={`/products/${product.id}`}>
        {/* Product image and info */}
        <div className="aspect-square bg-gray-900/30">
          {/* ... image ... */}
        </div>
        
        <div className="p-4">
          <h3 className="font-medium text-white mb-1">{product.name}</h3>
          <p className="text-gray-500 text-sm mb-3">{product.brand}</p>
          <p className="text-2xl font-bold text-white">${product.price}</p>
        </div>
      </Link>
      
      {/* Add to Cart - Always visible, matches product page colors */}
      <div className="px-4 pb-4">
        <AddToCartButton productId={product.id} isInCart={inCart} />
      </div>
    </div>
  );
};
4. REMOVE FROM CART FUNCTIONALITY:
javascript// Add removeFromCart to cart context
const removeFromCart = async (productId) => {
  try {
    // Find cart item ID
    const cartItem = cartItems.find(item => item.product.id === productId);
    if (!cartItem) return;
    
    await fetch(`/api/cart/${cartItem.id}`, {
      method: 'DELETE',
      credentials: 'include'
    });
    
    // Update local state
    setCartItems(items => items.filter(item => item.product.id !== productId));
    
    // Show feedback
    toast.success('Removed from cart');
  } catch (error) {
    console.error('Remove from cart error:', error);
    toast.error('Failed to remove from cart');
  }
};
5. COLOR SPECIFICATIONS:
javascript// Exact colors to use:
const colors = {
  // Add to Cart (not in cart)
  addToCart: 'bg-blue-500 hover:bg-blue-600', // Light blue like product page
  
  // In Cart 
  inCart: 'bg-green-600 hover:bg-green-700', // Green like product page
  
  // Wishlist (not wishlisted)
  wishlistEmpty: 'bg-gray-600/50 backdrop-blur hover:bg-gray-500/50',
  
  // Wishlist (wishlisted)
  wishlistFilled: 'bg-red-500',
  
  // Remove button
  removeButton: 'bg-red-500 hover:bg-red-600'
};
6. MOBILE CONSIDERATIONS:
javascript// For mobile, show remove button without hover
const isMobile = window.innerWidth < 768;

<button className={`absolute right-2 ${isMobile ? 'opacity-100' : 'opacity-0 group-hover:opacity-100'} ...`}>
  <X className="w-3 h-3" />
</button>
KEY CHANGES:

✅ Light blue "Add to Cart" buttons on /products page (not dark blue)
✅ Green "In Cart - View" with checkmark
✅ Small red X button appears on hover to remove from cart
✅ Wishlist button identical on both pages
✅ Consistent color scheme throughout
✅ Easy cart management without going to cart page

This creates a unified, intuitive shopping experience!