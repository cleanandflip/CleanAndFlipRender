Implement the “Local Delivery” UX Everywhere
0) Use the single source of truth
Hook: useLocality() → GET /api/locality/status (returns { isLocal, distanceMiles, hasAddress, defaultAddressId }).

Product flags: is_local_delivery_available, is_shipping_available.

Guard: Cart/checkout must call existing validation so non-local users can’t add/buy local-only items.

Do not reintroduce zip-code checks or placeholders. Only the coordinate/radius method drives UI logic. 

1) Global UI building blocks (re-use everywhere)
LocalBadge

Props: { isLocal: boolean }

Renders:

Local: pill “Local Delivery Area” with a check icon.

Non-local: pill “Shipping Area” with an info icon.

Tooltip copy:

Local: “You qualify for FREE Local Delivery within our 50-mile service zone.”

Non-local: “You’re outside our local zone. Shipping is available on eligible items.”

ProductAvailabilityChips

Props: { local: boolean; ship: boolean }

Renders:

local && ship → “Local Delivery & Shipping”

local && !ship → “Local Delivery Only”

!local && ship → “Shipping Only”

FreeDeliveryPill (local users only)

Copy: “FREE Local Delivery”

Small truck icon, subtle success styling.

LocalityGate (logic wrapper)

Blocks Add to Cart if !isLocal && product.localOnly.

Shows inline explanation + CTA “Update address”.

LocalBanner (contextual banners)

Local mode: “You’re in our Local Delivery area — delivery is FREE.”

Non-local: “Outside our Local Delivery area. Shipping available on eligible items.”

Use your design system tokens; keep pills compact (xs/sm), rounded-full, medium contrast.

2) Exact placements & behaviors
A) Nav header → User dropdown
Top row: <LocalBadge isLocal={data?.isLocal} />

Underneath:

If local: “FREE Local Delivery to your default address” + link “Manage addresses”.

If non-local: “Shipping area only” + link “Add/Set default address”.

If no default address: neutral pill “Set a default address to check Local Delivery”.

tsx
Copy
Edit
const { data: loc } = useLocality();
<MenuItem><LocalBadge isLocal={!!loc?.isLocal} /></MenuItem>
<MenuItem href="/dashboard/addresses">
  {loc?.isLocal ? "FREE Local Delivery to your default address" : "Set default address to check Local Delivery"}
</MenuItem>
B) Profile → Addresses tab
Each address card:

“Default” badge if is_default.

Local status chip: “Local Delivery Eligible” (success) or “Shipping Area”.

Page header (right side): <LocalBadge isLocal={loc.isLocal} />

When user sets a new default:

Recompute locality (already server-side) and toast result:

Local → “Default address qualifies for FREE Local Delivery.”

Non-local → “Default address is outside local zone. Shipping only.”

Provide “Why local?” link to small explainer modal.

C) Product list cards & product detail (PDP)
On every product card:

<ProductAvailabilityChips local={p.is_local_delivery_available} ship={p.is_shipping_available} />

If local user and product supports local → show FreeDeliveryPill.

Add to Cart button:

If !isLocal && localOnly → disabled + tooltip “Local Delivery only. Update your address to order.”

If permitted → your classic Blue → Green (“In Cart”) → Red hover remove behavior.

PDP hero area:

Under price: chips + (if local & local-available) FreeDeliveryPill.

Small helper text:

Local users: “Delivered to your door at no cost.”

Non-local users seeing local-only: “This item isn’t available for shipping to your address.”

D) Cart drawer & Cart page
Top banner (sticky within cart): <LocalBanner />

Local: “FREE Local Delivery is applied to eligible items.”

Non-local: “Some items may be Local Delivery only. Remove restricted items to checkout.”

Each line item:

Small chip indicating item availability (“Local Delivery Only” / “Shipping Only” / “Local & Shipping”).

If restricted for this user (shouldn’t be addable, but survive stale states):

Red outline + inline alert “This item is Local Delivery only.”
Button: “Remove item”.

Cart footer:

Local user: “Delivery: FREE Local Delivery” line in the breakdown.

Non-local: “Delivery: Calculated at checkout”.

Remove from cart must call the new /api/cart/items/:id DELETE and invalidate ["cart"] only.

E) Checkout
Header row: <LocalBadge /> + (if local) FreeDeliveryPill.

Shipping method section:

Local user:

“Local Delivery — FREE” (preselected if item mix allows)

If cart contains any shipping-only items, also show “Standard Shipping”.

Non-local:

Only shipping options.

If cart includes any local-only item (should be guarded earlier), block with modal:

“Local Delivery only item detected. Remove it to continue.”

Primary: “Remove and continue”, Secondary: “Back to cart”.

Sidebar order summary:

Show delivery line explicitly (“Local Delivery — FREE” vs “Shipping — $X”).

Final “Place Order” should re-validate via /api/cart/validate and surface helpful copy on failure.

F) Order confirmation & Orders list
Show a small tag beside each order:

“Fulfilled by Local Delivery” or “Fulfilled by Shipping”.

G) Marketing surfaces (smart but subtle)
Home top ribbon (personalized):

Local: “🎉 You’re in our Local Delivery area — delivery is FREE.”

Non-local + no default address: “Add your address to see if you qualify for FREE Local Delivery.”

Category empty states: remind of FREE Local Delivery for locals.

Toast moments:

When a local user adds a local-eligible product for the first time this session:
“Nice — this will be delivered FREE to your default address.”

3) Behavior rules (single truth across the site)
Local-only product = is_local_delivery_available && !is_shipping_available.

Non-local users: cannot add; show tooltip & “Update address” CTA.

Local users: normal flow; emphasize “FREE Local Delivery”.

Shipping-only product = !is_local_delivery_available && is_shipping_available.

Everyone can add; no local pill.

Both = show both chips; for local users, emphasize FreeDeliveryPill.

No default address = treat as non-local for gating; nudge to set default.

All of the above rules line up with the unified cart guard and endpoints already documented, so the UI simply reflects the server decisions. 

4) Copy & visual guidelines
Keep all locality UI compact and reassuring. Avoid shouting except the top ribbon.

Colors: use your success palette for local advantages; neutral/secondary for “Shipping Area”.

Icons: check (local), truck (delivery), info (non-local explainer).

Accessibility: each badge has aria-label (“Local Delivery Area”, “Shipping Area”). Tooltips are keyboard-reachable.

5) Routing & state
Queries:

["locality"] for locality status.

["cart"] for cart.

Invalidations:

When default address changes → invalidate ["locality"] + ["cart"].

No onboarding dependency: UI should work whether address was created in profile, checkout, or earlier. No legacy onboarding checks remain.

6) Purge & prevent regressions
Remove any pickup terminology. Local = delivery only.

Delete any legacy ZIP helpers, onboarding-gated local checks, and placeholder logic.

Lint/grep gates:

isLocalCustomer(, zip, pickup, Math.random() in checkout, old cart routes.

Unit tests:

Local vs non-local add-to-cart behavior.

Mixed cart validation and checkout blocking.

Address default change → locality refresh.

7) Acceptance criteria (QA checklist)
Header dropdown always shows correct badge and links.

Address cards clearly show Default and Local Delivery Eligible state.

Product cards/PDP display correct chips and FreeDeliveryPill (when applicable).

Non-local user cannot add a Local Delivery Only product; sees clear reason and “Update address”.

Cart and checkout show the same items and the correct delivery line (“FREE Local Delivery” for locals).

Checkout blocks incompatible carts with a friendly modal and a one-click fix (“Remove and continue”).

If Replit implements exactly the placements and behaviors above—using the unified locality engine, badges, chips, and guard logic—you’ll get a clean, fast, and persuasive Local Delivery experience that markets the benefit in all the right places while preventing every class of “local-only” mistake.