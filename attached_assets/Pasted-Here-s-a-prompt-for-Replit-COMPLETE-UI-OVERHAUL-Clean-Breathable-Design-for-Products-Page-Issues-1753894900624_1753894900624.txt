Here's a prompt for Replit:

COMPLETE UI OVERHAUL: Clean, Breathable Design for Products Page
Issues from Screenshots:

Product cards are extremely cramped - text overlapping, badges everywhere
Hover state is chaotic - "Remove from wishlist" overlapping content
Individual product page has duplicate wishlist/share buttons
No visual breathing room - everything is squeezed together

1. CLEAN PRODUCT CARD REDESIGN:
javascript// components/ProductCard.jsx - CLEAN, SPACIOUS VERSION
const ProductCard = ({ product }) => {
  const [isHovered, setIsHovered] = useState(false);
  
  return (
    <div 
      className="group relative bg-gray-900 rounded-xl overflow-hidden transition-all duration-300 hover:shadow-2xl"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {/* Single Badge Area - Top Left */}
      <div className="absolute top-3 left-3 z-10 flex flex-col gap-2">
        {product.featured && (
          <span className="bg-yellow-500 text-black px-3 py-1 rounded-full text-xs font-medium">
            Featured
          </span>
        )}
        {product.stock === 1 && (
          <span className="bg-red-500 text-white px-3 py-1 rounded-full text-xs font-medium">
            Only 1 left!
          </span>
        )}
      </div>
      
      {/* Clean Wishlist Button - Top Right */}
      <div className="absolute top-3 right-3 z-10">
        <WishlistButton 
          productId={product.id} 
          size="small"
          showTooltip={false} // No overlapping tooltips
        />
      </div>
      
      <Link href={`/products/${product.id}`} className="block">
        {/* Image Container - More Space */}
        <div className="aspect-[4/3] relative overflow-hidden bg-gray-800">
          {product.images?.length > 0 ? (
            <img 
              src={product.images[0]} 
              alt={product.name}
              className="w-full h-full object-contain p-4" // Add padding
            />
          ) : (
            <div className="flex flex-col items-center justify-center h-full p-8">
              <Package className="w-20 h-20 text-gray-600 mb-3" />
              <p className="text-gray-500 text-sm">No Image Available</p>
            </div>
          )}
          
          {/* Hover Overlay - Clean Add to Cart */}
          <div className={`absolute inset-0 bg-black/60 flex items-center justify-center transition-opacity duration-300 ${isHovered ? 'opacity-100' : 'opacity-0'}`}>
            <AddToCartButton 
              productId={product.id}
              stock={product.stock}
              variant="hover"
              className="transform translate-y-2 group-hover:translate-y-0 transition-transform"
            />
          </div>
        </div>
        
        {/* Product Info - Spacious */}
        <div className="p-5 space-y-3">
          {/* Title & Brand */}
          <div>
            <h3 className="font-semibold text-white text-lg leading-tight mb-1">
              {product.name}
            </h3>
            <p className="text-gray-400 text-sm">{product.brand}</p>
          </div>
          
          {/* Price & Condition Row */}
          <div className="flex items-center justify-between">
            <span className="text-2xl font-bold text-white">
              ${product.price}
            </span>
            {product.condition && (
              <span className="bg-blue-500/20 text-blue-400 px-3 py-1 rounded-full text-xs">
                {product.condition}
              </span>
            )}
          </div>
          
          {/* Single Key Spec */}
          {product.weight && (
            <p className="text-gray-500 text-sm">{product.weight}</p>
          )}
        </div>
      </Link>
    </div>
  );
};
2. PRODUCTS PAGE LAYOUT - SPACIOUS GRID:
javascript// pages/products/index.jsx
const ProductsPage = () => {
  return (
    <div className="min-h-screen bg-gray-950">
      {/* Hero Section */}
      <div className="bg-gradient-to-b from-gray-900 to-gray-950 py-16">
        <div className="container mx-auto px-4">
          <h1 className="text-5xl font-bold text-white mb-4">Shop Equipment</h1>
          <p className="text-gray-400 text-lg">
            Discover premium weightlifting equipment inspected and verified by our team.
          </p>
        </div>
      </div>
      
      {/* Filters Bar - Clean & Spacious */}
      <div className="sticky top-0 bg-gray-900/95 backdrop-blur-sm border-b border-gray-800 z-20">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between gap-4">
            {/* Search */}
            <div className="flex-1 max-w-md">
              <input
                type="text"
                placeholder="Search equipment..."
                className="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-2.5 text-white placeholder-gray-500 focus:border-blue-500 focus:outline-none"
              />
            </div>
            
            {/* View Controls */}
            <div className="flex items-center gap-3">
              <button className="p-2.5 bg-gray-800 rounded-lg hover:bg-gray-700 transition-colors">
                <Grid className="w-5 h-5 text-gray-400" />
              </button>
              <button className="p-2.5 bg-gray-800 rounded-lg hover:bg-gray-700 transition-colors">
                <List className="w-5 h-5 text-gray-400" />
              </button>
              <button className="flex items-center gap-2 bg-gray-800 rounded-lg px-4 py-2.5 hover:bg-gray-700 transition-colors">
                <Filter className="w-5 h-5 text-gray-400" />
                <span className="text-gray-300">Filters</span>
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {/* Products Grid - Spacious */}
      <div className="container mx-auto px-4 py-8">
        <p className="text-gray-400 mb-6">{products.length} products found</p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {products.map(product => (
            <ProductCard key={product.id} product={product} />
          ))}
        </div>
      </div>
    </div>
  );
};
3. CLEAN PRODUCT PAGE - NO DUPLICATE BUTTONS:
javascript// pages/products/[id].jsx
const ProductPage = ({ product }) => {
  return (
    <div className="min-h-screen bg-gray-950">
      <div className="container mx-auto px-4 py-8">
        {/* Breadcrumbs */}
        <nav className="text-sm text-gray-500 mb-8">
          <Link href="/" className="hover:text-white">Home</Link>
          <span className="mx-2">/</span>
          <Link href="/products" className="hover:text-white">Products</Link>
          <span className="mx-2">/</span>
          <span className="text-gray-300">{product.name}</span>
        </nav>
        
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {/* Image Gallery - Clean */}
          <div className="space-y-4">
            <div className="aspect-square bg-gray-900 rounded-xl overflow-hidden">
              {product.images?.length > 0 ? (
                <img 
                  src={product.images[0]} 
                  alt={product.name}
                  className="w-full h-full object-contain p-8"
                />
              ) : (
                <div className="flex flex-col items-center justify-center h-full">
                  <Package className="w-32 h-32 text-gray-600 mb-4" />
                  <p className="text-gray-500">No Image Available</p>
                  <p className="text-gray-600 text-sm mt-2">This product currently has no images</p>
                </div>
              )}
            </div>
          </div>
          
          {/* Product Info - Clean & Organized */}
          <div className="space-y-6">
            {/* Header */}
            <div>
              <h1 className="text-4xl font-bold text-white mb-2">{product.name}</h1>
              <p className="text-gray-400 text-lg">{product.brand}</p>
            </div>
            
            {/* Price Section */}
            <div className="space-y-3">
              <div className="text-4xl font-bold text-blue-400">${product.price}</div>
              <div className="flex items-center gap-3">
                {product.condition && (
                  <span className="bg-blue-500/20 text-blue-400 px-4 py-2 rounded-lg">
                    {product.condition}
                  </span>
                )}
                {product.stock === 1 && (
                  <span className="bg-red-500/20 text-red-400 px-4 py-2 rounded-lg">
                    Only 1 left!
                  </span>
                )}
              </div>
              <p className="text-gray-500 text-sm">üëÅ {product.views || 0} views</p>
            </div>
            
            {/* Description */}
            <div className="py-6 border-t border-gray-800">
              <p className="text-gray-300 leading-relaxed">{product.description}</p>
            </div>
            
            {/* Specifications */}
            <div className="bg-gray-900 rounded-xl p-6 space-y-4">
              <h3 className="text-lg font-semibold text-white">Key Specifications</h3>
              <div className="space-y-3">
                {product.weight && (
                  <div className="flex justify-between py-2 border-b border-gray-800">
                    <span className="text-gray-500">Weight Range</span>
                    <span className="text-white font-medium">{product.weight}</span>
                  </div>
                )}
                {/* Add other specs */}
              </div>
            </div>
            
            {/* Actions - Single Row, No Duplicates */}
            <div className="flex items-center gap-4 py-6">
              <QuantitySelector 
                quantity={quantity}
                onChange={setQuantity}
                max={product.stock}
              />
              <AddToCartButton 
                productId={product.id}
                stock={product.stock}
                quantity={quantity}
                className="flex-1"
              />
              <WishlistButton 
                productId={product.id} 
                size="default"
              />
              <ShareButton productId={product.id} />
            </div>
            
            {/* Trust Badges */}
            <div className="grid grid-cols-3 gap-4 py-6 border-t border-gray-800">
              <div className="text-center">
                <Truck className="w-8 h-8 mx-auto mb-2 text-blue-400" />
                <p className="text-sm font-medium">Fast Shipping</p>
                <p className="text-xs text-gray-500">2-3 business days</p>
              </div>
              <div className="text-center">
                <Shield className="w-8 h-8 mx-auto mb-2 text-green-400" />
                <p className="text-sm font-medium">Inspected</p>
                <p className="text-xs text-gray-500">Quality guaranteed</p>
              </div>
              <div className="text-center">
                <RefreshCw className="w-8 h-8 mx-auto mb-2 text-orange-400" />
                <p className="text-sm font-medium">30-Day Returns</p>
                <p className="text-xs text-gray-500">Easy returns</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
4. HOVER CARD COMPONENT:
javascript// components/ui/AddToCartButton.jsx
export const AddToCartButton = ({ productId, stock, variant = 'default', className }) => {
  if (variant === 'hover') {
    return (
      <button 
        onClick={(e) => {
          e.preventDefault();
          handleAddToCart();
        }}
        className="bg-white text-black px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-all transform hover:scale-105"
      >
        <ShoppingCart className="w-5 h-5 inline mr-2" />
        Add to Cart
      </button>
    );
  }
  
  // Default button...
};
KEY IMPROVEMENTS:

‚úÖ Removed overlapping elements and tooltips
‚úÖ Added proper spacing between all elements
‚úÖ Cleaner badge placement - no overlap
‚úÖ Single action area on product page - no duplicates
‚úÖ Better visual hierarchy with size and spacing
‚úÖ Consistent design between listing and product pages
‚úÖ Hover state shows clean "Add to Cart" overlay
‚úÖ More breathing room throughout