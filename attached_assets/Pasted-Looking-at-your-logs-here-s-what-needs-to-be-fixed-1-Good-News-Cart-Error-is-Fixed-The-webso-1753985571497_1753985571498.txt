Looking at your logs, here's what needs to be fixed:
1. âœ… Good News - Cart Error is Fixed!
The websocket logger is now working correctly. You can see:
6:09:19 PM info: {"type":"websocket_broadcast","event":"cart-updated","userId":"98f77445-e7b1-4181-8293-65129a7d3222"}
2. Remove Duplicate Logging (Each request logs twice)
Problem: Every request shows up twice:
[2025-07-31T18:08:52.605Z] GET /api/categories?active=true - 304 - 98ms
6:08:52 PM GET     /api/categories?active=true              304 98ms
Fix: You have two loggers running. Find and remove one of:

The timestamp logger [2025-07-31...]
OR the formatted logger 6:08:52 PM

Search for middleware that creates logs with [timestamp] format and remove it.
3. Filter Out Development Files
Add this to your request logger middleware:
typescript// Skip patterns for development files
const skipPatterns = [
  '/@vite', '/@fs', '/@react-refresh', 
  '/node_modules', '.js', '.css', '.map',
  'hot-update', 'chunk-', '/src/'
];

// Also skip based on query params
if (url?.includes('?t=') || url?.includes('?v=')) {
  return next(); // Skip versioned assets
}

if (skipPatterns.some(pattern => url?.includes(pattern))) {
  return next();
}
4. Fix Wishlist Check Spam
Problem: 6-7 wishlist checks fire simultaneously for each product grid load
Frontend fix - In your product components:
typescript// Add debouncing or use React Query deduplication
const { data: wishlistStatus } = useQuery({
  queryKey: ['wishlist', productId],
  queryFn: () => checkWishlist(productId),
  staleTime: 30000, // 30 seconds
  cacheTime: 60000, // 1 minute
});
Backend fix - Add request deduplication:
typescript// In wishlist route
const wishlistCache = new Map();
const CACHE_DURATION = 5000; // 5 seconds

router.post('/wishlist/check', async (req, res) => {
  const { productId } = req.body;
  const userId = req.user?.id;
  const cacheKey = `${userId}-${productId}`;
  
  // Check cache
  const cached = wishlistCache.get(cacheKey);
  if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {
    return res.json(cached.data);
  }
  
  // ... do the check ...
  
  // Cache the result
  wishlistCache.set(cacheKey, {
    data: result,
    timestamp: Date.now()
  });
});
5. Fix Database Error - Missing Column
Error: column "page_url" does not exist
In server/storage.ts around line 573, update the analytics query:
Either:

Remove the page_url column from the SELECT statement
Or add the column to your database:

sqlALTER TABLE analytics ADD COLUMN page_url TEXT;
6. Consolidate Similar Requests
Add batching for product requests:
typescript// In your logger, track patterns
const requestPatterns = new Map();

// For /api/products requests
if (url?.startsWith('/api/products?')) {
  const baseUrl = '/api/products';
  const pattern = requestPatterns.get(baseUrl) || { count: 0, lastSeen: Date.now() };
  pattern.count++;
  pattern.lastSeen = Date.now();
  requestPatterns.set(baseUrl, pattern);
  
  // Only log every 5th request or if it's been 10 seconds
  if (pattern.count % 5 !== 0 && Date.now() - pattern.lastSeen < 10000) {
    return; // Skip logging
  }
}
7. Remove "[ERROR]" Prefix Duplication
Your error logs show both [ERROR] and the actual error. Standardize to one format.
Quick Fixes Summary:

Find and remove the duplicate logger creating [timestamp] logs
Add skip patterns for all /src/ and development files
Fix the analytics query - remove page_url or add the column
Add caching to wishlist checks to prevent spam
Consider batching similar API calls in the logger

The main issue is you have TWO logging systems running simultaneously. Find the old one and remove it completely.