FIX ALL WEBSOCKET & DROPDOWN ISSUES - COMPREHENSIVE

REPLIT INSTRUCTIONS:
markdown## COMPLETE FIX FOR ALL ISSUES

### ISSUE 1: WEBSOCKET METHOD MISMATCH
The WebSocket hook exports `send` but components are calling `sendMessage`

### ISSUE 2: USER DROPDOWN NOT WORKING
Button clicks but dropdown doesn't open

### FILE FIXES NEEDED:

---

### 1. FIX WEBSOCKET HOOK
FILE: `/client/src/hooks/useWebSocket.tsx`

FIND:
```jsx
return { 
  send, 
  status,
  isConnected: status === 'connected',
  reconnectAttempts 
};
REPLACE WITH:
jsxreturn { 
  send,
  sendMessage: send,  // Add alias for compatibility
  status,
  isConnected: status === 'connected',
  reconnectAttempts 
};

2. FIX ALL COMPONENTS USING WEBSOCKET
Search for sendMessage in all files and replace with send
OR keep using sendMessage since we added the alias above.
FILES TO CHECK:

/client/src/components/admin/modals/UserModal.tsx
/client/src/components/admin/modals/ProductModal.tsx
/client/src/components/admin/modals/CategoryModal.tsx
Any other modal or component files

FIND:
jsxconst { sendMessage } = useWebSocket();
REPLACE WITH:
jsxconst { send } = useWebSocket();
AND FIND:
jsxsendMessage({
REPLACE WITH:
jsxsend({

3. FIX USER DROPDOWN IN NAVIGATION
FILE: /client/src/components/Navigation.tsx
ADD AT TOP OF COMPONENT:
jsxconst [isUserDropdownOpen, setIsUserDropdownOpen] = useState(false);
const dropdownRef = useRef<HTMLDivElement>(null);
REPLACE THE CLICK OUTSIDE HANDLER:
jsxuseEffect(() => {
  const handleClickOutside = (event: MouseEvent) => {
    const target = event.target as HTMLElement;
    // Don't close if clicking the button itself
    if (dropdownRef.current && !dropdownRef.current.contains(target)) {
      setIsUserDropdownOpen(false);
    }
  };

  if (isUserDropdownOpen) {
    // Delay to prevent immediate close
    const timer = setTimeout(() => {
      document.addEventListener('click', handleClickOutside);
    }, 10);
    
    return () => {
      clearTimeout(timer);
      document.removeEventListener('click', handleClickOutside);
    };
  }
}, [isUserDropdownOpen]);
SIMPLIFY THE BUTTON CLICK:
jsx<button 
  onClick={(e) => {
    e.stopPropagation();
    setIsUserDropdownOpen(prev => !prev);
  }}
  className="flex items-center gap-2 px-4 py-2.5 rounded-lg 
             transition-all duration-200 hover:bg-white/10"
  style={{
    background: 'rgba(75, 85, 99, 0.4)',
    border: '1px solid rgba(156, 163, 175, 0.4)',
    backdropFilter: 'blur(8px)'
  }}
>
  <User className="w-5 h-5 text-gray-300" />
  <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform 
                          ${isUserDropdownOpen ? 'rotate-180' : ''}`} />
</button>

4. FIX WEBSOCKET BROADCAST FUNCTION
FILE: /server/websocket.ts
ENSURE BROADCAST METHOD EXISTS:
typescriptpublic broadcast(data: any, excludeClientId?: string) {
  const message = typeof data === 'string' ? data : JSON.stringify(data);
  let count = 0;
  
  this.clients.forEach((client, id) => {
    if (id !== excludeClientId && client.ws.readyState === WebSocket.OPEN) {
      try {
        client.ws.send(message);
        count++;
      } catch (error) {
        console.error(`Failed to send to client ${id}:`, error);
      }
    }
  });
  
  if (count > 0) {
    console.log(`[WS] Broadcasted to ${count} clients`);
  }
}

5. FIX WEBSOCKET IN SERVER ROUTES
FILE: /server/routes.ts or /server/routes/admin.ts
ENSURE wsManager IS PROPERLY IMPORTED:
typescriptimport { wsManager } from '../websocket';

// OR if using singleton pattern:
import { WebSocketManager } from '../websocket';

// In route handlers:
const ws = WebSocketManager.getInstance();
if (ws) {
  ws.broadcast({
    type: 'user_update',
    action: 'update',
    data: updatedUser
  });
}

6. TEST SEQUENCE
After making changes:

Test WebSocket:

Open browser console
Should see "✅ WebSocket connected"
Make a change in admin panel
Should see broadcast messages


Test Dropdown:

Click user button
Dropdown should open
Click outside
Dropdown should close
Click button again
Should toggle properly


Test Live Sync:

Open 2 browser tabs
Update user in one tab
Should update in other tab




7. DEBUGGING COMMANDS
Add these temporarily to debug:
IN NAVIGATION COMPONENT:
jsxconsole.log('Dropdown state:', isUserDropdownOpen);
IN WEBSOCKET HOOK:
jsxconsole.log('WebSocket status:', status);
console.log('Sending message:', data);
IN SERVER WEBSOCKET:
typescriptconsole.log('Clients connected:', this.clients.size);
console.log('Broadcasting:', data);

SUMMARY OF FIXES:

✅ Add sendMessage alias to WebSocket hook
✅ Fix all components using wrong method name
✅ Fix dropdown state and click handlers
✅ Ensure WebSocket broadcast works
✅ Fix server-side WebSocket manager
✅ Add proper error handling
✅ Add debugging logs

Run these fixes in order and test after each step!