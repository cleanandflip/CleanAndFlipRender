Global Search Bar Overhaul Instructions for Replit
1. CREATE UNIFIED SEARCH COMPONENT THEME
css/* Global search bar theme - add to your global CSS */
:root {
  --search-bg: rgba(31, 41, 55, 0.8);
  --search-border: rgba(75, 85, 99, 0.5);
  --search-focus-border: rgba(96, 165, 250, 0.5);
  --search-dropdown-bg: rgba(24, 29, 37, 0.98);
  --search-hover-bg: rgba(55, 65, 81, 0.5);
  --search-text: #ffffff;
  --search-placeholder: rgba(156, 163, 175, 0.8);
  --search-icon: rgba(156, 163, 175, 0.7);
  --search-highlight: #3b82f6;
}

/* Universal search bar styling */
.search-container,
[class*="search-bar"],
[class*="search-input"] {
  position: relative;
  width: 100%;
}

/* Search input field - matches your form fields */
.search-input,
input[type="search"],
input[placeholder*="Search"] {
  width: 100%;
  background: var(--search-bg) !important;
  border: 1px solid var(--search-border) !important;
  color: var(--search-text) !important;
  padding: 0.75rem 1rem 0.75rem 2.75rem !important;
  border-radius: 0.5rem !important;
  font-size: 1rem !important;
  transition: all 0.2s ease !important;
  backdrop-filter: blur(8px) !important;
}

/* Search input hover/focus states */
.search-input:hover,
input[type="search"]:hover {
  background: rgba(31, 41, 55, 0.9) !important;
  border-color: rgba(107, 114, 128, 0.6) !important;
}

.search-input:focus,
input[type="search"]:focus {
  outline: none !important;
  border-color: var(--search-focus-border) !important;
  background: rgba(31, 41, 55, 0.95) !important;
  box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1) !important;
}

/* Search icon styling */
.search-icon,
.search-container svg:first-child {
  position: absolute !important;
  left: 0.875rem !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
  color: var(--search-icon) !important;
  width: 1.125rem !important;
  height: 1.125rem !important;
  pointer-events: none !important;
}

/* Clear button */
.search-clear,
.search-container button[class*="clear"] {
  background: transparent !important;
  border: none !important;
  color: var(--search-icon) !important;
  padding: 0.25rem !important;
  transition: all 0.2s ease !important;
}

.search-clear:hover {
  color: var(--search-text) !important;
  background: rgba(255, 255, 255, 0.1) !important;
  border-radius: 0.25rem !important;
}
2. SEARCH DROPDOWN STYLING
css/* Dropdown container */
.search-dropdown,
.search-suggestions,
[class*="search-results"] {
  position: absolute !important;
  top: calc(100% + 0.5rem) !important;
  left: 0 !important;
  right: 0 !important;
  background: var(--search-dropdown-bg) !important;
  border: 1px solid var(--search-border) !important;
  border-radius: 0.75rem !important;
  backdrop-filter: blur(20px) !important;
  box-shadow: 
    0 20px 25px -5px rgba(0, 0, 0, 0.5),
    0 10px 10px -5px rgba(0, 0, 0, 0.3),
    0 0 0 1px rgba(255, 255, 255, 0.05) inset !important;
  z-index: 9999 !important;
  overflow: hidden !important;
  animation: searchDropdownSlide 0.2s ease-out !important;
}

@keyframes searchDropdownSlide {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Dropdown sections */
.search-section {
  padding: 1rem !important;
  border-bottom: 1px solid rgba(75, 85, 99, 0.3) !important;
}

.search-section:last-child {
  border-bottom: none !important;
}

.search-section-title {
  display: flex !important;
  align-items: center !important;
  gap: 0.5rem !important;
  color: var(--search-placeholder) !important;
  font-size: 0.875rem !important;
  font-weight: 500 !important;
  margin-bottom: 0.75rem !important;
  text-transform: uppercase !important;
  letter-spacing: 0.05em !important;
}

/* Search items */
.search-item,
.search-dropdown button {
  display: flex !important;
  align-items: center !important;
  gap: 0.75rem !important;
  width: 100% !important;
  padding: 0.625rem 0.875rem !important;
  background: transparent !important;
  border: none !important;
  border-radius: 0.5rem !important;
  color: var(--search-text) !important;
  font-size: 0.9375rem !important;
  text-align: left !important;
  cursor: pointer !important;
  transition: all 0.15s ease !important;
  position: relative !important;
  overflow: hidden !important;
}

.search-item:hover,
.search-dropdown button:hover {
  background: var(--search-hover-bg) !important;
  transform: translateX(4px) !important;
}

.search-item::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background: var(--search-highlight);
  transform: translateX(-100%);
  transition: transform 0.2s ease;
}

.search-item:hover::before {
  transform: translateX(0);
}

/* Icons in search items */
.search-item svg {
  color: var(--search-icon) !important;
  width: 1rem !important;
  height: 1rem !important;
  flex-shrink: 0 !important;
}

.search-item:hover svg {
  color: var(--search-highlight) !important;
}

/* Highlighted text */
.search-highlight {
  color: var(--search-highlight) !important;
  font-weight: 500 !important;
}
3. LOADING & EMPTY STATES
css/* Loading state */
.search-loading {
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: center !important;
  padding: 3rem 2rem !important;
  color: var(--search-placeholder) !important;
}

.search-loading-spinner {
  width: 2rem !important;
  height: 2rem !important;
  border: 2px solid rgba(59, 130, 246, 0.2) !important;
  border-top-color: var(--search-highlight) !important;
  border-radius: 50% !important;
  animation: searchSpin 0.8s linear infinite !important;
  margin-bottom: 1rem !important;
}

@keyframes searchSpin {
  to { transform: rotate(360deg); }
}

/* Empty state */
.search-empty {
  text-align: center !important;
  padding: 3rem 2rem !important;
  color: var(--search-placeholder) !important;
}

.search-empty svg {
  width: 3rem !important;
  height: 3rem !important;
  margin: 0 auto 1rem !important;
  opacity: 0.5 !important;
}
4. MOBILE RESPONSIVE DESIGN
css/* Mobile optimizations */
@media (max-width: 640px) {
  .search-input {
    font-size: 16px !important; /* Prevent zoom on iOS */
    padding: 0.875rem 1rem 0.875rem 2.5rem !important;
  }
  
  .search-dropdown {
    position: fixed !important;
    top: auto !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    max-height: 70vh !important;
    border-radius: 1.5rem 1.5rem 0 0 !important;
    animation: searchDropdownSlideUp 0.3s ease-out !important;
  }
  
  @keyframes searchDropdownSlideUp {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }
  
  /* Add drag handle for mobile */
  .search-dropdown::before {
    content: '';
    position: absolute;
    top: 0.75rem;
    left: 50%;
    transform: translateX(-50%);
    width: 3rem;
    height: 0.25rem;
    background: var(--search-border);
    border-radius: 0.125rem;
  }
}
5. UPDATED SEARCHBAR COMPONENT STRUCTURE
Tell Replit to update the SearchBar component with this structure:
jsx// SearchBar component updates
const SearchBar = ({ ... }) => {
  // ... existing logic

  return (
    <div ref={containerRef} className={`search-container ${className}`}>
      <form onSubmit={handleFormSubmit} className="relative">
        <Search className="search-icon" />
        <input
          ref={inputRef}
          type="search"
          value={inputValue}
          onChange={(e) => handleInputChange(e.target.value)}
          onFocus={() => setIsOpen(true)}
          placeholder={placeholder}
          className="search-input"
          autoComplete="off"
          spellCheck="false"
        />
        {inputValue && (
          <button
            type="button"
            onClick={handleClear}
            className="search-clear"
            aria-label="Clear search"
          >
            <X size={16} />
          </button>
        )}
      </form>

      {/* Dropdown */}
      {isOpen && (
        <div className="search-dropdown">
          {/* Recent Searches */}
          {searchHistory.length > 0 && (
            <div className="search-section">
              <div className="search-section-title">
                <Clock size={14} />
                Recent Searches
              </div>
              <div className="search-items">
                {searchHistory.map((term, index) => (
                  <button
                    key={`recent-${index}`}
                    type="button"
                    onClick={() => handleSuggestionClick(term)}
                    className="search-item"
                  >
                    <Clock size={14} />
                    <span>{term}</span>
                  </button>
                ))}
              </div>
            </div>
          )}

          {/* Popular Searches */}
          <div className="search-section">
            <div className="search-section-title">
              <TrendingUp size={14} />
              Popular Searches
            </div>
            <div className="search-items">
              {popularSearches.map((term, index) => (
                <button
                  key={`popular-${index}`}
                  type="button"
                  onClick={() => handleSuggestionClick(term)}
                  className="search-item"
                >
                  <TrendingUp size={14} />
                  <span>{term}</span>
                </button>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};
6. GLOBAL SEARCH BAR INSTANCES
Apply to all search bars across the site:
css/* Navigation search bar */
nav .search-container {
  max-width: 24rem;
}

/* Hero/landing page search */
.hero-search .search-input {
  padding: 1rem 1.25rem 1rem 3rem !important;
  font-size: 1.125rem !important;
}

/* Products page search */
.products-search {
  flex: 1;
  max-width: 32rem;
}

/* Admin panel search */
.admin-search .search-input {
  background: rgba(31, 41, 55, 0.6) !important;
}
7. ANIMATIONS & MICRO-INTERACTIONS
css/* Smooth transitions */
.search-container * {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
}

/* Pulse animation on focus */
.search-input:focus {
  animation: searchPulse 2s ease-in-out infinite !important;
}

@keyframes searchPulse {
  0%, 100% {
    box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1);
  }
  50% {
    box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.2);
  }
}

/* Hover effects */
.search-item {
  position: relative;
  isolation: isolate;
}

.search-item::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, transparent, rgba(96, 165, 250, 0.1), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.search-item:hover::after {
  transform: translateX(100%);
}
8. ACCESSIBILITY IMPROVEMENTS
css/* Focus visible for keyboard navigation */
.search-input:focus-visible,
.search-item:focus-visible {
  outline: 2px solid var(--search-highlight) !important;
  outline-offset: 2px !important;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .search-input {
    border-width: 2px !important;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .search-dropdown {
    animation: none !important;
  }
  
  .search-item {
    transition: none !important;
  }
}
IMPLEMENTATION CHECKLIST FOR REPLIT:

Create a search-theme.css file with all the above styles
Import it globally in your app
Update all SearchBar components to use the new class names
Remove any conflicting inline styles
Test on all pages (navigation, products, admin, etc.)
Ensure consistent behavior across all search instances
Add proper ARIA labels for accessibility
Test mobile responsiveness
Verify animations are smooth
Check z-index layering works properly

This complete overhaul will give you a unified, beautifully animated search experience that perfectly matches your dark theme across the entire website!