ðŸšš CHANGE "LOCAL PICKUP" TO "FREE LOCAL DELIVERY TO YOUR DOORSTEP"
Instructions for Replit - Global Text Replacement:
ðŸ“Œ STEP 1: Global Find & Replace
Use Find & Replace across the entire project (Ctrl+Shift+F or Cmd+Shift+F):
bash# FIND (case-insensitive):
"local pickup"
"Local pickup"
"Local Pickup"
"LOCAL PICKUP"

# REPLACE WITH:
"free local delivery to your doorstep"
"Free local delivery to your doorstep"
"Free Local Delivery to Your Doorstep"
"FREE LOCAL DELIVERY TO YOUR DOORSTEP"
ðŸ“Œ STEP 2: Update Specific Components
Product Cards & Listings:
typescript// client/src/components/products/product-card.tsx
// FIND:
{product.localPickup && (
  <span className="text-sm text-green-500">âœ“ Local Pickup</span>
)}

// REPLACE WITH:
{product.localPickup && user?.isLocalCustomer && (
  <span className="text-sm text-green-500">âœ“ Free Local Delivery to Your Doorstep</span>
)}
Product Detail Page:
typescript// client/src/pages/product-detail.tsx
// FIND:
<div className="flex items-center space-x-2">
  <Truck className="h-5 w-5" />
  <span>Local Pickup Available</span>
</div>

// REPLACE WITH:
{user?.isLocalCustomer && (
  <div className="flex items-center space-x-2">
    <Truck className="h-5 w-5 text-green-500" />
    <span className="text-green-500 font-medium">
      Free Local Delivery to Your Doorstep
    </span>
  </div>
)}
Checkout Page:
typescript// client/src/pages/checkout.tsx
// FIND:
const shippingOptions = [
  { id: 'pickup', label: 'Local Pickup', price: 0 },
  { id: 'standard', label: 'Standard Shipping', price: 9.99 }
];

// REPLACE WITH:
const shippingOptions = user?.isLocalCustomer ? [
  { id: 'local_delivery', label: 'Free Local Delivery to Your Doorstep', price: 0 },
  { id: 'standard', label: 'Standard Shipping', price: 9.99 }
] : [
  { id: 'standard', label: 'Standard Shipping', price: 9.99 }
];
ðŸ“Œ STEP 3: Update Database & Schema
Update Enum Values:
sql-- If you have shipping_method enum, update it:
ALTER TYPE shipping_method RENAME VALUE 'local_pickup' TO 'local_delivery';

-- Update existing orders:
UPDATE orders 
SET shipping_method = 'local_delivery' 
WHERE shipping_method = 'local_pickup';
Update Schema File:
typescript// shared/schema.ts
// FIND:
export const shippingMethodEnum = pgEnum('shipping_method', [
  'local_pickup',
  'standard',
  'express'
]);

// REPLACE WITH:
export const shippingMethodEnum = pgEnum('shipping_method', [
  'local_delivery',
  'standard',
  'express'
]);
ðŸ“Œ STEP 4: Update Backend Logic
Shipping Calculation:
typescript// server/routes/orders.ts or shipping.ts
// FIND:
if (shippingMethod === 'local_pickup') {
  shippingCost = 0;
  deliveryMessage = 'Available for local pickup';
}

// REPLACE WITH:
if (shippingMethod === 'local_delivery' && user.isLocalCustomer) {
  shippingCost = 0;
  deliveryMessage = 'Free local delivery to your doorstep';
}
Order Confirmation Emails:
typescript// server/services/email-templates.ts
// FIND:
const shippingMethodText = order.shippingMethod === 'local_pickup' 
  ? 'Local Pickup' 
  : 'Standard Shipping';

// REPLACE WITH:
const shippingMethodText = order.shippingMethod === 'local_delivery' 
  ? 'Free Local Delivery to Your Doorstep' 
  : 'Standard Shipping';
ðŸ“Œ STEP 5: Update UI Text & Labels
Admin Dashboard:
typescript// client/src/pages/admin/orders.tsx
// FIND:
const shippingMethods = {
  local_pickup: 'Local Pickup',
  standard: 'Standard Shipping'
};

// REPLACE WITH:
const shippingMethods = {
  local_delivery: 'Free Local Delivery',
  standard: 'Standard Shipping'
};
Filter Options:
typescript// client/src/components/filters/shipping-filter.tsx
// FIND:
<label>
  <input type="checkbox" value="local_pickup" />
  Local Pickup Only
</label>

// REPLACE WITH:
{user?.isLocalCustomer && (
  <label>
    <input type="checkbox" value="local_delivery" />
    Free Local Delivery Available
  </label>
)}
ðŸ“Œ STEP 6: Update Conditional Display Logic
Add Local Customer Check:
typescript// Create a helper function in client/src/lib/utils.ts:
export function getShippingMethodLabel(method: string, isLocalCustomer: boolean): string {
  if (method === 'local_delivery' && isLocalCustomer) {
    return 'Free Local Delivery to Your Doorstep';
  }
  if (method === 'standard') {
    return 'Standard Shipping';
  }
  return method;
}

// Use throughout the app:
<span>{getShippingMethodLabel(order.shippingMethod, user?.isLocalCustomer)}</span>
ðŸ“Œ STEP 7: Update Local Customer Detection
Ensure Local Customer Flag is Set:
typescript// server/routes/auth.ts or user.ts
// When user completes address:
const isAshvilleArea = zipCode.startsWith('287') || zipCode.startsWith('288');

await db.query(
  'UPDATE users SET is_local_customer = $1 WHERE id = $2',
  [isAshvilleArea, userId]
);
ðŸ“Œ STEP 8: Search for These Specific Terms
Run a global search for these variations and update:

pickup â†’ delivery
pick-up â†’ delivery
collect â†’ deliver
collection â†’ delivery
pickup location â†’ delivery address
pickup time â†’ delivery time
schedule pickup â†’ schedule delivery

ðŸ“Œ STEP 9: Update Success Messages
typescript// Order success page
// FIND:
"Your order is ready for pickup"

// REPLACE WITH:
{user?.isLocalCustomer 
  ? "Your order will be delivered free to your doorstep!" 
  : "Your order has been confirmed"}
ðŸ“Œ VERIFICATION CHECKLIST:
After making changes, verify these locations:

âœ… Product cards show "Free Local Delivery"
âœ… Product detail pages show delivery option
âœ… Checkout shows free delivery for local customers
âœ… Order confirmations reflect delivery method
âœ… Admin dashboard shows correct shipping methods
âœ… Email templates use new terminology
âœ… Database shipping methods updated
âœ… Only shows for local customers (ZIP 287xx/288xx)

This ensures the entire codebase uses "free local delivery to your doorstep" for local customers only!