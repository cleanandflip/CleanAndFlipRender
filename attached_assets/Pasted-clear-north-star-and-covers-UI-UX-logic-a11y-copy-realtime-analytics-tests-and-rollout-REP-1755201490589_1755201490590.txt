clear north star and covers UI, UX, logic, a11y, copy, realtime, analytics, tests, and rollout.

REPLIT: Fulfillment/Delivery UI — Professional, simple, site-wide
0) Goal (single source of truth)
We support exactly two fulfillment modes per product:

LOCAL_ONLY (heavy/oversized; no shipping option)

LOCAL_AND_SHIPPING (local delivery plus carrier shipping)

Store this as Product.fulfillmentMode: 'LOCAL_ONLY' | 'LOCAL_AND_SHIPPING' and make the UI/logic across the site read only from this field.

1) Visual system (consistent everywhere)
A. Badges (compact, for lists/cards/PDP/Cart)
Create <FulfillmentBadge mode />:

LOCAL_ONLY → pill style, green background, icon Truck → label: “Local delivery only”

LOCAL_AND_SHIPPING → dual pill: green Truck + gray Package → label: “Local delivery & shipping”

States: default, subtle (reduced emphasis), interactive=false (no pointer). Ensure WCAG AA contrast.

Tokenized styles (Tailwind tokens or CSS vars):

--badge-radius: 9999px; --badge-pad-x: .625rem; --badge-pad-y: .25rem;

Colors: green 600/200 for bg/fg, gray 700/300 for shipping chip; dark mode friendly.

B. Eligibility banner (contextual, site-wide)
Create <DeliveryEligibilityBanner/> at top of /products, PDP, Cart, Checkout.

If in local zone: show positive banner
“✅ Free local delivery in your area • Most orders arrive 24–48 hrs”

If outside zone: show informational banner
“ℹ️ You’re outside our local delivery area. Local-only items can’t be added.”

Include a ZIP checker inline (<ZipCheck/>) to re-evaluate eligibility.

C. Info cards (educational, “Buy local” benefits)
Component <LocalBenefitsCard variant='grid|pdp|checkout'/>:

3–4 bullets with icons:

“24–48 hr delivery window”

“Heavy item handling”

“No packaging waste”

“Local support”

Short, clear copy (see Copy Deck below). Use consistent card visuals across homepage, product list, PDP, and checkout.

2) UX Rules & Business Logic
A. Add-to-cart gating
When user outside local zone:

LOCAL_ONLY: Add to Cart disabled with tooltip “Only available for local delivery.” Show ZIP checker CTA.

LOCAL_AND_SHIPPING: allow add; default shipping later.

When inside zone:

LOCAL_ONLY: normal add; fulfillment auto-set to “Local Delivery”.

LOCAL_AND_SHIPPING: add allowed; user chooses at checkout between Local Delivery vs Shipping.

B. Cart & mixed baskets
If cart contains any LOCAL_ONLY item:

Hide all carrier shipping methods for those lines.

Totals: no shipping cost for LOCAL_ONLY lines; shipping fees apply only to items marked LOCAL_AND_SHIPPING and chosen as “Ship”.

If user is outside zone and tries to add LOCAL_ONLY (via deep link): block with modal and suggest ZIP checker.

C. Checkout behavior
LOCAL_ONLY order (all items):

Shipping step becomes “Delivery”; show only Local Delivery (24–48 hrs); shipping cost $0.

Show delivery ETA prominently. Store this ETA on the order.

Mixed eligibility:

Render a per-line fulfillment selector for LOCAL_AND_SHIPPING items (“Deliver locally” vs “Ship”), default to Local if in zone.

Summary groups: Local Delivery (free), Shipping (computed). Clear separation in totals.

D. PDP (product detail)
Show <FulfillmentBadge/> under price.

If LOCAL_ONLY:

Inline note: “This heavy item is local delivery only. ETA 24–48 hrs within our area.”

Show ZIP checker if user not yet geolocated.

3) Data & APIs
Expand /api/locality/status to return { isLocal: boolean, zoneName?: string, freeDelivery: boolean, etaHours: [24,48] }.

Persist locality in a signed cookie (cf_local_zone), refreshable via ZIP checker.

Ensure all price/total endpoints accept a cart with per-line fulfillmentSelection: 'LOCAL' | 'SHIP' (for LOCAL_AND_SHIPPING items).

4) Realtime (fix & unify)
WebSocket payload shape (server → client):

json
Copy
Edit
{ "type": "product:update", "payload": { "id": "...uuid...", "fulfillmentMode": "LOCAL_ONLY" | "LOCAL_AND_SHIPPING" } }
(No topic field. Always {type, payload}.)

Client listeners only read .type. On product:update, update caches (SWR/RTK) and optimistically refresh badges/buttons on lists, PDP, cart.

Also emit cart:reprice when a product’s mode changes and the item is in cart.

5) Admin UI (Products)
Delivery/Fulfillment field only two choices:

“Local delivery only”

“Local delivery & shipping”

Inline help text that mirrors customer-facing language.

Audit log when changing fulfillment mode (so we can debug).

6) Component APIs (TypeScript)
ts
Copy
Edit
export type FulfillmentMode = 'LOCAL_ONLY' | 'LOCAL_AND_SHIPPING';

export function FulfillmentBadge({ mode, subtle = false }:{
  mode: FulfillmentMode; subtle?: boolean;
}) { /* pill(s) with icons */ }

export function DeliveryEligibilityBanner() { /* reads locality */ }

export function ZipCheck({
  onResolved,
}:{ onResolved:(isLocal:boolean)=>void }) { /* zip -> /api/locality/status */ }

export function LocalBenefitsCard({ variant }:{
  variant: 'grid'|'pdp'|'checkout';
}) { /* icons + bullets */ }
Hooks:

ts
Copy
Edit
export function useLocality(){
  // reads cookie, fetches /api/locality/status, exposes {isLocal, freeDelivery, eta:[24,48], refresh(zip)}
}
7) Copy Deck (centralize in src/i18n/fulfillment.ts)
Badges

LOCAL_ONLY: Local delivery only

LOCAL_AND_SHIPPING: Local delivery & shipping

Banner (in-zone): Free local delivery in your area • Most orders arrive in 24–48 hrs

Banner (out-of-zone): You’re outside our local delivery area. Local-only items can’t be added.

PDP note (LOCAL_ONLY): This heavy item is local delivery only. Delivered within 24–48 hrs in our area.

Cart tooltip (blocked): Local-only item. Not available in your area.

Benefits bullets:

24–48 hr delivery window

Heavy item handling

No packaging waste

Local support

8) Accessibility & polish
Badges and banners must meet AA contrast (verify against both themes).

Icons have aria-hidden="true", descriptive text visible.

Buttons that are disabled due to locality include an aria-description with the reason.

Keyboard focus styles on ZIP checker and selectors.

9) Edge cases
Locality unknown → show neutral banner + ZIP checker; block LOCAL_ONLY add-to-cart until resolved.

Product mode flips while in cart:

If becomes LOCAL_ONLY: auto-switch that line to LOCAL and reprice; notify toast.

If becomes LOCAL_AND_SHIPPING: keep current selection.

Guest vs signed-in users: cookie works for both; sync to account on sign-in.

10) Telemetry
Track events: locality_resolved, add_to_cart_blocked_local_only, fulfillment_selection_changed, checkout_delivery_confirmed.

Dimensions: isLocal, zipPrefix, cartHasLocalOnly.

11) Testing (must pass before merge)
Unit: badge renders, hook resolves locality branches.

Integration: add-to-cart disabled when !isLocal && LOCAL_ONLY.

Checkout: shipping methods hidden for LOCAL_ONLY; totals exclude shipping for those lines; ETA text present.

E2E (Cypress):

Outside zone cannot add LOCAL_ONLY (modal + tooltip).

Inside zone can complete LOCAL_ONLY order; order confirmation shows 24–48 hr ETA.

Mixed cart computes grouped totals correctly.

12) Rollout
Feature flag: fulfillment_v2.

Migrate existing products to one of the two modes (script).

Backfill orders with fulfillmentSummary for receipts.

Update emails: show badge text + ETA.

13) Design notes (quick styles)
Pills: rounded-full, small vertical padding, medium font weight, icon + 6px gap.

Use consistent placement:

Product card: under price.

PDP: below title/price block.

Cart line: right of name on first row.

Checkout summary: in the “Delivery & Shipping” section header.

Acceptance criteria (summary)
Two-mode system enforced everywhere.

Non-local users cannot add local-only items.

Local-only orders drop all shipping fees and show 24–48 hr ETA at checkout + confirmation.

Badges/banners/cards are consistent and accessible site-wide.

Realtime changes reflect instantly (WebSocket {type,payload}).

If anything here conflicts with existing code, prefer this spec (and remove any “Shipping only” artifacts).