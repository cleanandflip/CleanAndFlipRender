 legacy imports that still expect a useWebSocketReady hook. We already standardized on useWebSocketState, so the clean fix is to export a tiny wrapper from the same file that returns the boolean ready. No new files, no extra libs — just adjust the current hook.

Below are exact, surgical instructions Replit should follow.

✅ Exact fix for does not provide an export named 'useWebSocketReady'
1) Edit the canonical hook file
File: client/src/hooks/useWebSocketState.tsx

Action: Append the wrapper export at the very end of the file (do not modify other code).

ts
Copy
Edit
// --- compatibility wrapper for legacy imports ---
// Some components still import { useWebSocketReady } and expect a boolean.
// Keep them working by exposing a thin wrapper around useWebSocketState.
export function useWebSocketReady(): boolean {
  const { ready } = useWebSocketState();
  return ready;
}
Leave everything else in this file exactly as-is (including the named export useWebSocketState, subscribe, etc.). Do not add a new default export.

2) (Quick sweep) Ensure all imports reference this file only
Run these two checks and fix any stragglers that point to removed/old hooks:

bash
Copy
Edit
# any old, removed hooks?
grep -RIn --include="*.ts*" -E "@/hooks/useSingletonSocket|@/hooks/useWebSocket[^S]|useSocket\(" client/src || true
If anything appears, change those imports/usages to:

ts
Copy
Edit
import { useWebSocketState, useWebSocketReady } from "@/hooks/useWebSocketState";
…and if they were calling a bare subscribe(...), make sure they get it from the hook:

ts
Copy
Edit
const { subscribe } = useWebSocketState();
3) Do not touch the 404 page
No changes to your 404 page. Styling and component remain as-is.

4) Verify
Hard refresh the app (clear Vite/HMR cache if needed).

Navigate to Admin → Products tab (where the error was thrown).

You should no longer see:
SyntaxError: ... does not provide an export named 'useWebSocketReady'.

Why this works
Legacy components call const ready = useWebSocketReady().
The wrapper returns the same ready boolean provided by the new useWebSocketState, so they keep working without any other code churn.

We didn’t add new modules or patterns — we only adjusted the current hook to expose a backwards-compatible named export.









Ask ChatGPT
