focusing only on the EnhancedProductModal. You’ve got a few wiring issues that explain why edits don’t propagate:

What’s breaking sync (concrete issues)
Mode buttons don’t update the booleans
You created changeMode(...) (which syncs mode → form booleans) but the buttons call setMode(...) directly. The submit payload then reads the stale booleans.

Submit uses form booleans instead of the selected mode
You compute const fulfillment = booleansFromMode(mode); but you don’t use it in the payload—so the chosen mode isn’t what’s saved.

Featured flag mapping is incomplete
You initialize featured from product.featured only. If the API returns isFeatured/is_featured, the checkbox can be wrong, and saves don’t behave as expected.

Initial delivery flags default to true and ignore snake_case
You set isLocalDeliveryAvailable/isShippingAvailable from product camels (defaulting to true). This can show the wrong state and then save it back.

Images & category compatibility aren’t sent
You don’t include images in submitData, and some backends expect category_id. (You can safely send both camel + snake.)

Cache invalidation key mismatch
You invalidate ["products:featured"] but most of your code (and logs) read /api/products/featured. If the query keys differ, the featured list won’t refresh.

Drop-in fixes (diff style)
A) Use the mode helper everywhere
diff
Copy
Edit
-  const changeMode = (m: FulfillmentMode) => {
+  const changeMode = (m: FulfillmentMode) => {
     setMode(m);
     setFormData((f) => ({ ...f, ...booleansFromMode(m) }));
   };
Buttons → call changeMode (not setMode)

diff
Copy
Edit
- onClick={() => setMode("local_only")}
+ onClick={() => changeMode("local_only")}
...
- onClick={() => setMode("shipping_only")}
+ onClick={() => changeMode("shipping_only")}
...
- onClick={() => setMode("both")}
+ onClick={() => changeMode("both")}
B) Initialize from the product robustly (featured + fulfillment)
Inside your useEffect(() => { if (product) { ... }}, [product]):

diff
Copy
Edit
-      const data = {
+      const initialMode = modeFromProduct(product);
+      const flags = booleansFromMode(initialMode);
+      const data = {
         name: product.name || '',
         description: product.description || '',
         categoryId: product.categoryId || '',
         price: product.price?.toString() || '',
         compareAtPrice: product.compareAtPrice?.toString() || '',
         cost: product.cost?.toString() || '',
         stock: product.stockQuantity?.toString() || product.stock?.toString() || '',
         sku: product.sku || '',
         barcode: product.barcode || '',
         status: product.status || 'active',
         images: product.images || [],
-        featured: product.featured || false,
+        featured: (product.isFeatured ?? product.is_featured ?? product.featured) || false,
         condition: product.condition || 'new',
         brand: product.brand || '',
         weight: product.weight?.toString() || '',
         dimensions: product.dimensions || '',
         tags: product.tags?.join?.(', ') || '',
         seoTitle: product.seoTitle || '',
         seoDescription: product.seoDescription || '',
         shippingRequired: product.shippingRequired !== false,
         taxable: product.taxable !== false,
         trackQuantity: product.trackQuantity !== false,
         continueSellingWhenOutOfStock: product.continueSellingWhenOutOfStock || false,
         requiresShipping: product.requiresShipping !== false,
         location: product.location || 'warehouse',
-        // Delivery Options
-        isLocalDeliveryAvailable: product.isLocalDeliveryAvailable ?? true,
-        isShippingAvailable: product.isShippingAvailable ?? true
+        // Delivery Options (derive from mode; handles snake/camel automatically)
+        isLocalDeliveryAvailable: flags.isLocalDeliveryAvailable,
+        isShippingAvailable: flags.isShippingAvailable,
       };
       setFormData(data);
       setInitialData(data);
-      setMode(modeFromProduct(product));
+      setMode(initialMode);
C) Categories query should keep cookies
diff
Copy
Edit
-  const { data: categories = [] } = useQuery({
+  const { data: categories = [] } = useQuery({
     queryKey: ['/api/categories'],
     queryFn: async () => {
-      const res = await fetch('/api/categories?active=true');
+      const res = await fetch('/api/categories?active=true', { credentials: 'include' });
       if (!res.ok) throw new Error('Failed to fetch categories');
       return res.json();
     }
   });
D) Submit: use the selected mode, send both key styles, include images & category_id
diff
Copy
Edit
-      const fulfillment = booleansFromMode(mode);
+      const fulfillment = booleansFromMode(mode);

       const method = product ? "PUT" : "POST";
       const stockNum = parseInt(String(formData.stock)) || 0;

       const submitData = {
         name: formData.name,
         description: formData.description,
-        categoryId: formData.categoryId,
+        categoryId: formData.categoryId,       // camel
+        category_id: formData.categoryId,      // snake (compat)
         brand: formData.brand,
         price: parseFloat(String(formData.price)) || 0,
         compareAtPrice: formData.compareAtPrice ? parseFloat(String(formData.compareAtPrice)) : null,
         cost: formData.cost ? parseFloat(String(formData.cost)) : null,
         stockQuantity: stockNum,
         status: formData.status,
         weight: formData.weight ? parseFloat(String(formData.weight)) : 0,
         sku: formData.sku || null,
+        images: formData.images,

         // booleans (server expects snake_case — send both for safety)
-        is_featured: !!formData.featured,
-        isFeatured: !!formData.featured,
+        is_featured: !!formData.featured,
+        isFeatured: !!formData.featured,

-        is_local_delivery_available: !!formData.isLocalDeliveryAvailable,
-        isLocalDeliveryAvailable: !!formData.isLocalDeliveryAvailable,
-
-        is_shipping_available: !!formData.isShippingAvailable,
-        isShippingAvailable: !!formData.isShippingAvailable,
+        // Use the currently selected mode (authoritative)
+        is_local_delivery_available: !!fulfillment.isLocalDeliveryAvailable,
+        isLocalDeliveryAvailable:    !!fulfillment.isLocalDeliveryAvailable,
+        is_shipping_available:       !!fulfillment.isShippingAvailable,
+        isShippingAvailable:         !!fulfillment.isShippingAvailable,
       };
E) Invalidate all product queries reliably (featured included)
diff
Copy
Edit
-      await Promise.all([
-        queryClient.invalidateQueries({ queryKey: ["adminProducts"] }),
-        queryClient.invalidateQueries({ queryKey: ["products"] }),
-        queryClient.invalidateQueries({ queryKey: ["products:featured"] }),
-        product?.id ? queryClient.invalidateQueries({ queryKey: ["product", product.id] }) : Promise.resolve(),
-      ]);
+      await Promise.all([
+        queryClient.invalidateQueries({ queryKey: ["adminProducts"] }),
+        queryClient.invalidateQueries({ predicate: (q) =>
+          Array.isArray(q.queryKey) && q.queryKey.some(k => String(k).includes('products'))
+        }),
+        product?.id ? queryClient.invalidateQueries({ queryKey: ["product", product.id] }) : Promise.resolve(),
+      ]);
Why this fixes your symptoms
Fulfillment not sticking: the mode buttons now call changeMode (keeps formData booleans in sync) and the payload uses booleansFromMode(mode)—so what you select is exactly what’s saved (both camel+snake names).

Featured list out of sync: the checkbox initializes from isFeatured/is_featured too, you send both back, and the featured queries are actually invalidated.

Images & category updates: included in the payload + dual categoryId/category_id for DB compatibility.

Categories loading under auth: the query now includes credentials to match your other admin requests.

Apply those diffs to this one file and your edits from the modal will reflect across Products, Featured, and Product detail immediately after save.