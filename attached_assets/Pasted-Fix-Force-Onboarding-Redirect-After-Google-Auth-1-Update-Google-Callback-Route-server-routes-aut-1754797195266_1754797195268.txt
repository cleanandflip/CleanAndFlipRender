Fix: Force Onboarding Redirect After Google Auth
1. Update Google Callback Route - server/routes/auth.ts:
typescriptrouter.get('/google/callback',
  passport.authenticate('google', { failureRedirect: '/login?error=google_auth_failed' }),
  async (req, res) => {
    const user = req.user as any;
    
    // ALWAYS redirect to onboarding for incomplete profiles
    if (!user.profileComplete) {
      // Force redirect to full URL
      return res.redirect(`${req.protocol}://${req.get('host')}/onboarding?step=${user.onboardingStep || 1}`);
    }
    
    // Only allow dashboard access if profile is complete
    res.redirect(`${req.protocol}://${req.get('host')}/dashboard`);
  }
);
2. Add Frontend Route Protection - client/src/App.tsx:
typescriptimport { useAuth } from './hooks/useAuth';
import { Redirect } from 'wouter';

function ProtectedRoute({ component: Component, ...props }) {
  const { user, isLoading } = useAuth();
  
  if (isLoading) return <div>Loading...</div>;
  if (!user) return <Redirect to="/login" />;
  
  // FORCE onboarding if profile incomplete
  if (!user.profileComplete && !props.path?.includes('onboarding')) {
    return <Redirect to="/onboarding" />;
  }
  
  return <Component {...props} />;
}

// Wrap ALL protected routes
<Route path="/dashboard" component={ProtectedRoute} />
<Route path="/cart" component={ProtectedRoute} />
<Route path="/checkout" component={ProtectedRoute} />
3. Add API Middleware Protection - server/middleware/requireProfile.ts:
typescriptexport function requireCompleteProfile(req, res, next) {
  if (!req.user) {
    return res.status(401).json({ error: 'Not authenticated' });
  }
  
  if (!req.user.profileComplete) {
    return res.status(403).json({ 
      error: 'Profile incomplete',
      redirect: '/onboarding',
      message: 'You must complete your profile to access this resource'
    });
  }
  
  next();
}

// Apply to ALL protected routes
app.use('/api/cart/*', requireAuth, requireCompleteProfile);
app.use('/api/orders/*', requireAuth, requireCompleteProfile);
app.use('/api/checkout/*', requireAuth, requireCompleteProfile);
4. Fix Client-Side Google Auth Handler - client/src/components/auth/GoogleSignInButton.tsx:
typescriptexport function GoogleSignInButton() {
  const handleGoogleAuth = () => {
    // Don't use sessionStorage, let server handle redirect
    window.location.href = '/api/auth/google';
  };
  
  return (
    <Button onClick={handleGoogleAuth}>
      <Chrome className="w-5 h-5 mr-2" />
      Sign in with Google
    </Button>
  );
}
5. Update Auth Status Check - client/src/hooks/useAuth.ts:
typescript// Add auto-redirect for incomplete profiles
useEffect(() => {
  if (data?.authenticated && !data?.user?.profileComplete) {
    window.location.href = '/onboarding';
  }
}, [data]);
Key Changes:

Server forces redirect to /onboarding after Google auth
Frontend blocks ALL routes until profile is complete
API endpoints reject requests from incomplete profiles
No way to bypass onboarding