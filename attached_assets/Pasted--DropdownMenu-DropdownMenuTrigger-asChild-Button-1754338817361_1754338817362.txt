              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="outline" size="sm" className="gap-2 h-8">
                    <Download className="w-4 h-4" />
                    Export
                    <ChevronDown className="w-4 h-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent className="glass border-border bg-card">
                  <DropdownMenuItem onClick={() => onExport('csv')}>
                    Export as CSV
                  </DropdownMenuItem>
                  <DropdownMenuItem onClick={() => onExport('pdf')}>
                    Export as PDF
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </div>
          </div>
          
          {/* Search and Filters Bar */}
          <div className="flex items-center gap-4 mt-4">
            <div className="relative flex-1 max-w-md">
              <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-text-muted" />
              <Input
                placeholder={searchPlaceholder}
                value={searchQuery}
                onChange={(e) => {
                  setSearchQuery(e.target.value);
                  onSearch(e.target.value);
                }}
                className="pl-10"
                style={{
                  backgroundColor: theme.colors.bg.primary,
                  borderColor: theme.colors.border.default,
                  color: theme.colors.text.primary
                }}
              />
            </div>
            
            <Button
              variant="outline"
              onClick={() => setShowFilters(!showFilters)}
              className="gap-2 relative h-8"
            >
              <Filter className="w-4 h-4" />
              Filters
              {activeFiltersCount > 0 && (
                <span className="absolute -top-2 -right-2 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center shadow-lg shadow-blue-500/30">
                  {activeFiltersCount}
                </span>
              )}
            </Button>

            {viewMode === 'both' && onViewChange && (
              <div className="flex gap-1">
                <Button
                  variant={currentView === 'list' ? 'primary' : 'outline'}
                  size="sm"
                  onClick={() => onViewChange('list')}
                  className="h-8"
                >
                  <List className="w-4 h-4" />
                </Button>
                <Button
                  variant={currentView === 'grid' ? 'primary' : 'outline'}
                  size="sm"
                  onClick={() => onViewChange('grid')}
                  className="h-8"
                >
                  <Grid className="w-4 h-4" />
                </Button>
              </div>
            )}

            {sortOptions && onSort && (
              <div className="flex items-center gap-2">
                <ArrowUpDown className="w-4 h-4 text-text-muted" />
                <Select onValueChange={onSort}>
                  <SelectTrigger className="w-40">
                    <SelectValue placeholder="Sort by..." />
                  </SelectTrigger>
                  <SelectContent>
                    {sortOptions.map(option => (
                      <SelectItem key={option.value} value={option.value}>
                        {option.label}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Filters Panel */}
      {showFilters && (
        <div 
          className="border-b p-4"
          style={{ borderColor: theme.colors.border.default }}
        >
          <Card className="p-4">
            {filters}
          </Card>
        </div>
      )}

      {/* Main Content */}
      <div className="p-6">
        {children}
      </div>
    </div>
  );
}