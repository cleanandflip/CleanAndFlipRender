Instructions to Fix Order Status Enum Error
The New Issue
The error changed from sum() to: "invalid input value for enum order_status: 'completed'"
This means the database has an enum for order status, but 'completed' is not a valid value.
1. Check Database Schema for Valid Order Status Values
Look in db/schema.ts for the orders table definition:
ts// db/schema.ts - Find something like:
export const orderStatusEnum = pgEnum('order_status', [
  'pending',
  'processing', 
  'shipped',
  'delivered',  // This might be the equivalent of 'completed'
  'cancelled'
]);

// Or in the orders table:
status: orderStatusEnum('status').notNull()
2. Find and Replace ALL 'completed' Status References
Search for 'completed' in server/routes.ts and replace with the correct status (likely 'delivered' or whatever the schema shows):
ts// WRONG:
eq(orders.status, 'completed')

// CORRECT (example - use actual value from schema):
eq(orders.status, 'delivered')
3. Fix Analytics Endpoint (Line ~960)
ts// server/routes.ts - Around line 960
// Replace 'completed' with the correct status

const revenueResult = await db.execute(sql`
  SELECT COALESCE(SUM(total), 0) as total_revenue,
         COUNT(*) as total_orders
  FROM orders
  WHERE status = 'delivered'  -- Change from 'completed' to correct value
  AND created_at >= ${startDate}
`);
4. Fix Users Endpoint (Line ~891)
ts// server/routes.ts - Around line 891
// In the user stats calculation

const totalSpentResult = await db.execute(sql`
  SELECT COALESCE(SUM(total), 0) as total_spent
  FROM orders
  WHERE user_id = ${user.id}
  AND status = 'delivered'  -- Change from 'completed' to correct value
`);
5. Global Search and Replace
Run these searches in server/routes.ts:

Search for: 'completed'
Search for: "completed"
Search for: status = 'completed'
Search for: eq(orders.status, 'completed')

Replace ALL instances with the correct status value from your schema.
6. Remove Legacy/Conflicting Code
Look for and remove:

Duplicate route definitions
Old commented-out code
Multiple versions of the same endpoint

ts// Remove patterns like:
// Old version - REMOVE
// app.get('/api/admin/analytics', ...)

// New version - KEEP only one
app.get('/api/admin/analytics', requireAdmin, async (req, res) => {
  // Implementation
});
7. Quick Fix Script
If the correct status is 'delivered', run this replacement:
bash# In server/routes.ts, replace all instances:
# Search: eq(orders.status, 'completed')
# Replace: eq(orders.status, 'delivered')

# Search: status = 'completed'
# Replace: status = 'delivered'

# Search: "completed"
# Replace: "delivered"
8. Alternative: Check Actual Database Values
Add this debug endpoint to see what statuses actually exist:
ts// Temporary debug endpoint
app.get('/api/debug/order-statuses', requireAdmin, async (req, res) => {
  try {
    const statuses = await db.execute(sql`
      SELECT DISTINCT status, COUNT(*) as count 
      FROM orders 
      GROUP BY status
    `);
    
    res.json({ 
      statuses: statuses.rows,
      note: 'These are the actual status values in your database'
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
9. Clean Up Duplicate Code
Search for duplicate patterns and keep only ONE version:
ts// Look for multiple definitions of:
- /api/admin/analytics
- /api/admin/users
- /api/admin/stats

// Keep only the latest, most complete version
// Delete older implementations
Instructions for Replit:

FIRST: Open db/schema.ts and find the EXACT enum values for order_status
IDENTIFY: What value represents a completed/paid order (likely 'delivered' or 'paid')
REPLACE: Change ALL instances of 'completed' to the correct value
SEARCH: Look for duplicate route definitions and remove old versions
TEST: The errors should stop immediately after using correct enum values

The key issue is that the code is using 'completed' but the database enum doesn't include this value. Find the correct value from the schema and replace all occurrences.