CRITICAL: Your Production Database is DIFFERENT from Replit Database!
THE REAL PROBLEM IDENTIFIED
Replit Preview: Uses one database (works perfectly)
cleanandflip.com: Uses a DIFFERENT database that's missing tables/users!
The error relation "password_reset_tokens" does not exist proves your production is using a DIFFERENT DATABASE that doesn't have the password_reset_tokens table!
IMMEDIATE FIX - RUN ON PRODUCTION DATABASE
STEP 1: Get Your PRODUCTION Database URL
Your production deployment needs to use the SAME database as Replit, OR you need to set up the production database properly.
bash# On Replit, get your working database URL:
echo $DATABASE_URL
# Copy this URL - this is the WORKING database

# Check what database your production is using:
# SSH into your production server or check your deployment platform
STEP 2: Two Options to Fix
OPTION A: Use Replit's Database in Production (FASTEST)
Make your production use the SAME database as Replit:
bash# In your deployment platform (Vercel/Railway/etc), set:
DATABASE_URL=<copy the DATABASE_URL from Replit>

# This will make production use the same working database
OPTION B: Fix Production Database (PROPER)
If production must use a different database, create the missing tables:
sql-- Connect to your PRODUCTION database (not Replit)
-- Run ALL of these commands:

-- 1. Create password_reset_tokens table
CREATE TABLE IF NOT EXISTS password_reset_tokens (
  id SERIAL PRIMARY KEY,
  user_id UUID NOT NULL,
  token VARCHAR(255) NOT NULL UNIQUE,
  expires_at TIMESTAMP NOT NULL,
  used BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_prt_token ON password_reset_tokens(token);
CREATE INDEX idx_prt_user_id ON password_reset_tokens(user_id);

-- 2. Check if users exist
SELECT COUNT(*) FROM users;

-- If zero users, copy from Replit database or create:
INSERT INTO users (id, email, password, first_name, last_name, role, created_at)
VALUES 
  ('9b2e3219-a07b-4570-a1ac-cc9558273dc9', 'cleanandflipyt@gmail.com', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewY3pp/eQIrU0XPe', 'Clean', 'Flip', 'admin', NOW())
ON CONFLICT (id) DO NOTHING;

-- 3. Verify
SELECT id, email FROM users WHERE email = 'cleanandflipyt@gmail.com';
STEP 3: Emergency Database Sync Script
Create this script to run on Replit to see both databases:
typescript// scripts/check-both-databases.ts
import { neon } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-http';

async function checkDatabases() {
  console.log('='.repeat(60));
  console.log('DATABASE COMPARISON');
  console.log('='.repeat(60));
  
  // Check Replit database
  const replitUrl = process.env.DATABASE_URL;
  console.log('\n1. REPLIT DATABASE:');
  console.log('URL:', replitUrl?.split('@')[1]?.split('/')[0]); // Show host only
  
  const replitSql = neon(replitUrl!);
  const replitDb = drizzle(replitSql);
  
  try {
    const replitUsers = await replitDb.execute(sql`SELECT COUNT(*) as count FROM users`);
    console.log('Users:', replitUsers.rows[0].count);
    
    const replitTokens = await replitDb.execute(sql`SELECT COUNT(*) as count FROM password_reset_tokens`);
    console.log('Password reset tokens table:', replitTokens.rows.length > 0 ? '‚úÖ EXISTS' : '‚ùå MISSING');
  } catch (e) {
    console.log('Error:', e.message);
  }
  
  // Check production database (if different)
  const prodUrl = process.env.PRODUCTION_DATABASE_URL || process.env.DATABASE_URL;
  if (prodUrl !== replitUrl) {
    console.log('\n2. PRODUCTION DATABASE:');
    console.log('URL:', prodUrl?.split('@')[1]?.split('/')[0]);
    
    const prodSql = neon(prodUrl!);
    const prodDb = drizzle(prodSql);
    
    try {
      const prodUsers = await prodDb.execute(sql`SELECT COUNT(*) as count FROM users`);
      console.log('Users:', prodUsers.rows[0].count);
      
      const prodTokens = await prodDb.execute(sql`SELECT COUNT(*) as count FROM password_reset_tokens`);
      console.log('Password reset tokens table:', prodTokens.rows.length > 0 ? '‚úÖ EXISTS' : '‚ùå MISSING');
    } catch (e) {
      console.log('Error:', e.message);
    }
  } else {
    console.log('\n2. PRODUCTION DATABASE: Same as Replit');
  }
  
  console.log('\n' + '='.repeat(60));
}

checkDatabases();
STEP 4: Quick Fix for Production
Add this to your deployment platform's environment variables:
bash# Copy EXACT database URL from Replit
DATABASE_URL=postgresql://neondb_owner:XXXXX@ep-XXXXX.us-east-2.aws.neon.tech/neondb?sslmode=require

# Make sure these are also set:
RESEND_API_KEY=re_XXXXX
APP_URL=https://cleanandflip.com
NODE_ENV=production
STEP 5: Database Migration Script
If you need to keep separate databases, create this migration:
sql-- Run on PRODUCTION database to match Replit structure
BEGIN;

-- Create all missing tables
CREATE TABLE IF NOT EXISTS password_reset_tokens (
  id SERIAL PRIMARY KEY,
  user_id UUID NOT NULL,
  token VARCHAR(255) NOT NULL UNIQUE,
  expires_at TIMESTAMP NOT NULL,
  used BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Add missing columns to existing tables
ALTER TABLE products ADD COLUMN IF NOT EXISTS subcategory VARCHAR(255);
ALTER TABLE categories ADD COLUMN IF NOT EXISTS image_url TEXT;

-- Create indexes
CREATE INDEX IF NOT EXISTS idx_prt_token ON password_reset_tokens(token);
CREATE INDEX IF NOT EXISTS idx_users_email_lower ON users(LOWER(email));

COMMIT;

-- Verify
\dt  -- List all tables
SELECT COUNT(*) FROM users;  -- Check user count
üéØ ROOT CAUSE ANALYSIS
Your deployment has TWO DIFFERENT DATABASES:

Replit Database: Has users, has password_reset_tokens table, WORKS
Production Database: Missing tables, possibly missing users, BROKEN

IMMEDIATE ACTION REQUIRED
Do this RIGHT NOW:

Check Replit's database URL:

bash# In Replit shell
echo $DATABASE_URL

Update your deployment:


Go to your deployment platform (Vercel/Railway/Render/etc)
Set DATABASE_URL to the SAME value from Replit
Redeploy


Or fix production database:

bash# Connect to production database
psql "YOUR_PRODUCTION_DATABASE_URL" << EOF
CREATE TABLE IF NOT EXISTS password_reset_tokens (
  id SERIAL PRIMARY KEY,
  user_id UUID NOT NULL,
  token VARCHAR(255) NOT NULL UNIQUE,
  expires_at TIMESTAMP NOT NULL,
  used BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
EOF
The solution is simple: Make production use the same database as Replit, or create the missing table in production!