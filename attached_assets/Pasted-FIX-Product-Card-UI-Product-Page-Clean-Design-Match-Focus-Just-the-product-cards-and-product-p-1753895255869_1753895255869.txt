FIX: Product Card UI & Product Page - Clean Design Match
Focus: Just the product cards and product page UI to match cleanly
1. CLEAN PRODUCT CARD DESIGN:
javascript// components/ProductCard.jsx - CLEAN VERSION
const ProductCard = ({ product }) => {
  return (
    <div className="group relative bg-gray-800/50 rounded-lg overflow-hidden border border-gray-700 hover:border-gray-600 transition-all">
      {/* Status Badges - Top */}
      <div className="absolute top-2 left-2 right-2 flex justify-between items-start z-10">
        <div className="flex gap-2">
          {product.featured && (
            <span className="bg-yellow-500 text-black px-2 py-0.5 rounded text-xs font-medium">
              ‚≠ê Featured
            </span>
          )}
          {product.stock === 1 && (
            <span className="bg-red-500/90 text-white px-2 py-0.5 rounded text-xs font-medium">
              üî∫ Only 1 left!
            </span>
          )}
        </div>
      </div>
      
      <Link href={`/products/${product.id}`}>
        {/* Image */}
        <div className="aspect-square relative bg-gray-900/50">
          {product.images?.length > 0 ? (
            <img 
              src={product.images[0]} 
              alt={product.name}
              className="w-full h-full object-cover"
            />
          ) : (
            <div className="flex flex-col items-center justify-center h-full">
              <Package className="w-12 h-12 text-gray-600" />
              <p className="text-gray-500 text-sm mt-2">No Image Available</p>
            </div>
          )}
        </div>
        
        {/* Product Info - CLEAN */}
        <div className="p-4">
          {/* Name & Price Row */}
          <div className="flex justify-between items-start mb-2">
            <h3 className="font-medium text-white flex-1 mr-2">{product.name}</h3>
            <span className="text-xl font-bold text-white">${product.price}</span>
          </div>
          
          {/* Brand */}
          <p className="text-gray-400 text-sm mb-3">{product.brand}</p>
          
          {/* Single Spec Line */}
          <div className="flex items-center justify-between text-sm">
            {product.condition && (
              <span className="text-blue-400">{product.condition}</span>
            )}
            {product.weight && (
              <span className="text-gray-500">{product.weight}</span>
            )}
          </div>
        </div>
      </Link>
      
      {/* Hover Actions - Clean Overlay */}
      <div className="absolute inset-x-0 bottom-0 p-4 opacity-0 group-hover:opacity-100 transition-opacity bg-gradient-to-t from-gray-900 to-transparent">
        <div className="flex gap-2">
          <button className="flex-1 bg-blue-600 text-white py-2 px-3 rounded hover:bg-blue-700 transition-colors text-sm font-medium">
            Add to Cart
          </button>
          <WishlistButton productId={product.id} size="small" />
        </div>
      </div>
    </div>
  );
};
2. MATCHING PRODUCT PAGE DESIGN:
javascript// pages/products/[id].jsx - Clean to match cards
const ProductPage = ({ product }) => {
  const [quantity, setQuantity] = useState(1);
  
  return (
    <div className="container mx-auto px-4 py-8">
      {/* Breadcrumbs */}
      <nav className="text-sm text-gray-500 mb-6">
        <Link href="/">Home</Link> / <Link href="/products">Products</Link> / {product.name}
      </nav>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {/* Image Section */}
        <div className="bg-gray-800/50 rounded-lg p-8 border border-gray-700">
          {product.images?.length > 0 ? (
            <img 
              src={product.images[0]} 
              alt={product.name}
              className="w-full h-auto max-h-[500px] object-contain"
            />
          ) : (
            <div className="flex flex-col items-center justify-center h-[400px]">
              <Package className="w-24 h-24 text-gray-600" />
              <p className="text-gray-500 mt-4">No Image Available</p>
              <p className="text-gray-600 text-sm">This product currently has no images</p>
            </div>
          )}
        </div>
        
        {/* Info Section - Match Card Style */}
        <div>
          {/* Header */}
          <h1 className="text-3xl font-bold text-white mb-2">{product.name}</h1>
          <p className="text-gray-400 mb-4">{product.brand}</p>
          
          {/* Price & Status */}
          <div className="flex items-center gap-4 mb-4">
            <span className="text-3xl font-bold text-blue-400">${product.price}</span>
            {product.stock === 1 && (
              <span className="bg-red-500/90 text-white px-3 py-1 rounded text-sm">
                üî∫ Only 1 left!
              </span>
            )}
            {product.condition && (
              <span className="text-blue-400 px-3 py-1 rounded bg-blue-400/10">
                {product.condition}
              </span>
            )}
          </div>
          
          <p className="text-gray-500 text-sm mb-6">üëÅ {product.views || 0} views</p>
          
          {/* Description */}
          <p className="text-gray-300 mb-6">{product.description}</p>
          
          {/* Key Specs - Clean Table */}
          <div className="bg-gray-800/30 rounded-lg p-4 mb-6">
            <h3 className="font-medium text-white mb-3">Key Specifications</h3>
            <div className="space-y-2 text-sm">
              {product.weight && (
                <div className="flex justify-between">
                  <span className="text-gray-400">Weight Range</span>
                  <span className="text-white">{product.weight}</span>
                </div>
              )}
              {product.increments && (
                <div className="flex justify-between">
                  <span className="text-gray-400">Increments</span>
                  <span className="text-white">{product.increments}</span>
                </div>
              )}
              {product.dial_system && (
                <div className="flex justify-between">
                  <span className="text-gray-400">Dial System</span>
                  <span className="text-white">{product.dial_system}</span>
                </div>
              )}
              {product.space_required && (
                <div className="flex justify-between">
                  <span className="text-gray-400">Space Required</span>
                  <span className="text-white">{product.space_required}</span>
                </div>
              )}
            </div>
          </div>
          
          {/* Add to Cart Section - NO DUPLICATE BUTTONS */}
          <div className="space-y-4">
            <div className="flex items-center gap-4">
              <div className="flex items-center border border-gray-600 rounded">
                <button 
                  onClick={() => setQuantity(Math.max(1, quantity - 1))}
                  className="px-3 py-2 hover:bg-gray-800"
                >
                  -
                </button>
                <span className="px-4 py-2">{quantity}</span>
                <button 
                  onClick={() => setQuantity(Math.min(product.stock, quantity + 1))}
                  className="px-3 py-2 hover:bg-gray-800"
                >
                  +
                </button>
              </div>
              
              <button className="flex-1 bg-blue-600 text-white py-3 px-6 rounded hover:bg-blue-700 transition-colors font-medium">
                Add to Cart
              </button>
              
              {/* Single Wishlist & Share */}
              <WishlistButton productId={product.id} size="default" />
              <button className="p-3 border border-gray-600 rounded hover:bg-gray-800">
                <Share2 className="w-5 h-5" />
              </button>
            </div>
          </div>
          
          {/* Shipping Info */}
          <div className="grid grid-cols-3 gap-4 mt-8 pt-8 border-t border-gray-700">
            <div className="text-center">
              <Truck className="w-6 h-6 mx-auto mb-2 text-gray-400" />
              <p className="text-sm">Fast Shipping</p>
              <p className="text-xs text-gray-500">2-3 business days</p>
            </div>
            <div className="text-center">
              <Shield className="w-6 h-6 mx-auto mb-2 text-gray-400" />
              <p className="text-sm">Inspected</p>
              <p className="text-xs text-gray-500">Quality guaranteed</p>
            </div>
            <div className="text-center">
              <RefreshCw className="w-6 h-6 mx-auto mb-2 text-gray-400" />
              <p className="text-sm">30-Day Returns</p>
              <p className="text-xs text-gray-500">Easy returns</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
KEY FIXES:

‚úÖ Removed duplicate "Only 1 left!" text
‚úÖ Weight shown only once in specs
‚úÖ Clean hover state - no overlapping text
‚úÖ Single wishlist button on product page (removed duplicates)
‚úÖ Consistent styling between card and product page
‚úÖ Better text hierarchy and spacing
‚úÖ Matching color scheme and component styles

The design now matches between the listing cards and individual product pages!