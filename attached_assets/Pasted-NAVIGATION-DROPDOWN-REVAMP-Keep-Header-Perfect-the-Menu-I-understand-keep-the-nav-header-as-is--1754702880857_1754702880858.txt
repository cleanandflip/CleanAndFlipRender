NAVIGATION DROPDOWN REVAMP - Keep Header, Perfect the Menu
I understand - keep the nav header as is, just fix the dropdown menu to look professional using your existing theme.

REPLIT INSTRUCTIONS - DROPDOWN MENU ONLY:
markdown## FIX DROPDOWN MENU CONTENT ONLY

### FILE: `/client/src/components/Navigation.tsx`

### KEEP EVERYTHING AS IS, ONLY FIX THE DROPDOWN MENU:

#### 1. DROPDOWN CONTAINER - Use Our Theme
Replace the current dropdown div with:
```jsx
{dropdownOpen && (
  <div className="absolute right-0 mt-2 w-64 
                  bg-[#1e293b] /* Same as our admin cards */
                  border border-gray-700/50 
                  rounded-xl shadow-2xl 
                  overflow-hidden">
2. ADD USER INFO HEADER (like our admin modals)
Add this at the top of dropdown content:
jsx    {/* User Info Section - Same style as admin user cards */}
    <div className="p-4 bg-[#0f172a]/50 border-b border-gray-700/50">
      <div className="flex items-center gap-3">
        <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 
                        rounded-lg flex items-center justify-center">
          <span className="text-white font-bold">
            {user?.email?.[0]?.toUpperCase() || 'CF'}
          </span>
        </div>
        <div>
          <div className="text-white font-medium text-sm">
            {user?.username || user?.email?.split('@')[0] || 'User'}
          </div>
          <div className="text-gray-400 text-xs">{user?.email}</div>
        </div>
      </div>
      {user?.role === 'developer' && (
        <div className="mt-3">
          <span className="inline-block px-2 py-1 
                         bg-purple-500/20 text-purple-400 
                         text-xs font-medium rounded">
            Developer Access
          </span>
        </div>
      )}
    </div>
3. FIX MENU ITEMS - Proper Alignment & Styling
Replace current menu items with:
jsx    {/* Menu Items Container */}
    <div className="py-1">
      {/* Dashboard */}
      <Link href="/dashboard">
        <a className="flex items-center gap-3 px-4 py-2.5 
                      text-gray-300 hover:bg-white/5 
                      transition-colors group"
           onClick={() => setDropdownOpen(false)}>
          <Grid3x3 className="w-4 h-4 text-gray-500" />
          <span className="text-sm">Dashboard</span>
        </a>
      </Link>
      
      {/* Order History */}
      <Link href="/orders">
        <a className="flex items-center gap-3 px-4 py-2.5 
                      text-gray-300 hover:bg-white/5 
                      transition-colors group"
           onClick={() => setDropdownOpen(false)}>
          <History className="w-4 h-4 text-gray-500" />
          <span className="text-sm">Order History</span>
        </a>
      </Link>
      
      {/* Developer Dashboard - Conditional */}
      {user?.role === 'developer' && (
        <>
          <div className="my-1 mx-4 border-t border-gray-700/30" />
          <Link href="/admin">
            <a className="flex items-center gap-3 px-4 py-2.5 
                          text-purple-400 hover:bg-purple-500/10 
                          transition-colors group"
               onClick={() => setDropdownOpen(false)}>
              <Code2 className="w-4 h-4 text-purple-500" />
              <span className="text-sm font-medium">Developer Dashboard</span>
            </a>
          </Link>
        </>
      )}
      
      {/* Divider before Sign Out */}
      <div className="my-1 mx-4 border-t border-gray-700/30" />
      
      {/* Sign Out */}
      <button onClick={handleLogout}
              className="w-full flex items-center gap-3 px-4 py-2.5 
                         text-red-400 hover:bg-red-500/10 
                         transition-colors group">
        <LogOut className="w-4 h-4 text-red-500" />
        <span className="text-sm">Sign Out</span>
      </button>
    </div>
  </div>
)}
4. ENSURE THESE IMPORTS EXIST
At the top of the file:
jsximport { Grid3x3, History, Code2, LogOut, ChevronDown } from 'lucide-react';
5. UPDATE THE CF BUTTON (dropdown trigger)
Just add hover state and chevron rotation:
jsx<button onClick={() => setDropdownOpen(!dropdownOpen)}
        className="flex items-center gap-2 px-2 py-1.5 
                   rounded-lg hover:bg-white/5 transition-all">
  <div className="w-9 h-9 bg-blue-600 rounded-lg 
                  flex items-center justify-center">
    <span className="text-white font-bold">CF</span>
  </div>
  <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform 
                          ${dropdownOpen ? 'rotate-180' : ''}`} />
</button>
6. ADD CLICK OUTSIDE TO CLOSE
Add this useEffect in the component:
jsxuseEffect(() => {
  const handleClickOutside = (e: MouseEvent) => {
    const target = e.target as HTMLElement;
    if (!target.closest('.user-dropdown-container')) {
      setDropdownOpen(false);
    }
  };

  if (dropdownOpen) {
    document.addEventListener('click', handleClickOutside);
  }

  return () => {
    document.removeEventListener('click', handleClickOutside);
  };
}, [dropdownOpen]);
And add the class to the dropdown container:
jsx<div className="relative user-dropdown-container">
  {/* CF button and dropdown here */}
</div>
VISUAL IMPROVEMENTS SUMMARY:

User Header Section

Gradient avatar matching admin panel
User info clearly displayed
Developer badge when applicable


Menu Items

Icons properly aligned LEFT of text
Consistent gap-3 spacing
Hover backgrounds matching our theme
Proper padding (px-4 py-2.5)


Visual Separators

Thin dividers between sections
Using border-gray-700/30 for subtlety


Color Coding

Gray icons/text for normal items
Purple for developer items
Red for sign out


Interactions

Smooth hover states
Chevron rotation animation
Click outside to close
Close on navigation



DO NOT CHANGE:

Navigation bar height
Logo (C&F box)
Shop/Sell/About/Contact links
Search bar
Cart button
Overall nav structure

ONLY FIXING:

Dropdown menu styling
Icon/text alignment
Hover states
User info display
Visual polish

This will give you a professional dropdown that matches your admin panel styling while keeping everything else exactly as it is.