Global Anti-Flicker & Smooth Transitions Fix
1. SCROLLBAR COMPENSATION - PREVENT HORIZONTAL SHIFTS
css/* Global scrollbar fix - add to your root CSS */
html {
  /* Always show scrollbar to prevent layout shift */
  overflow-y: scroll;
  
  /* Smooth scrolling */
  scroll-behavior: smooth;
}

/* Alternative: Reserve space for scrollbar */
html {
  /* Modern browsers - reserve scrollbar space */
  scrollbar-gutter: stable;
}

/* Calculate scrollbar width and compensate */
:root {
  --scrollbar-width: calc(100vw - 100%);
}

/* When modals/overlays open */
body.modal-open,
body.overlay-active {
  padding-right: var(--scrollbar-width);
}

/* Fix header/nav shift when scrollbar disappears */
header,
nav,
.fixed,
[class*="fixed"] {
  padding-right: var(--scrollbar-width);
  transition: none; /* Prevent animation on padding change */
}
2. PREVENT FOUC (Flash of Unstyled Content)
css/* Hide everything until loaded */
html:not(.hydrated) * {
  visibility: hidden !important;
}

html.hydrated {
  visibility: visible;
}

/* Smooth fade-in when ready */
body {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}

body.loaded {
  opacity: 1;
}
Add this JavaScript to your app initialization:
javascript// Add to your main app file
document.documentElement.classList.add('hydrated');
window.addEventListener('load', () => {
  document.body.classList.add('loaded');
});
3. SMOOTH PAGE TRANSITIONS
css/* Prevent layout shift on route changes */
#root,
#__next,
.app-wrapper {
  min-height: 100vh;
  position: relative;
  isolation: isolate;
}

/* Smooth transitions between pages */
main {
  animation: pageEnter 0.3s ease-out;
}

@keyframes pageEnter {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Disable animations during navigation */
.navigating * {
  animation-duration: 0s !important;
  transition-duration: 0s !important;
}
4. CARD & COMPONENT STABILITY
css/* Prevent card flicker */
.card,
[class*="card"] {
  /* Reserve minimum height to prevent layout shift */
  min-height: 100px;
  
  /* Disable transform transitions that cause flicker */
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
  
  /* Smooth transitions only for specific properties */
  transition: box-shadow 0.2s ease, border-color 0.2s ease;
}

/* Prevent button jump */
button {
  /* Prevent layout shift on hover/active */
  transform: translateZ(0);
  backface-visibility: hidden;
  
  /* Only transition specific properties */
  transition: background-color 0.2s ease, 
              color 0.2s ease,
              border-color 0.2s ease;
}

/* Remove problematic transforms */
button:active {
  transform: translateZ(0) !important; /* No scale transform */
}
5. PRODUCTS PAGE SPECIFIC FIX
css/* Prevent products grid flicker */
.products-grid,
[class*="grid"] {
  /* Force GPU acceleration */
  transform: translateZ(0);
  will-change: transform;
  
  /* Stable layout */
  contain: layout;
}

/* Product cards anti-flicker */
.product-card {
  /* Reserve space */
  min-height: 300px;
  
  /* Prevent reflow */
  contain: layout style paint;
  
  /* No transform animations */
  transform: none !important;
}

/* Loading skeleton stability */
.skeleton {
  /* Prevent layout shift */
  min-height: inherit;
  background: linear-gradient(90deg, 
    rgba(255,255,255,0.1) 0%, 
    rgba(255,255,255,0.2) 50%, 
    rgba(255,255,255,0.1) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}
6. GLOBAL LAYOUT STABILITY
css/* Prevent all layout shifts */
* {
  /* No margin collapsing */
  margin-top: 0;
  margin-bottom: 0;
}

/* Stable image loading */
img {
  /* Reserve space before load */
  aspect-ratio: attr(width) / attr(height);
  width: 100%;
  height: auto;
}

/* Stable font loading */
body {
  /* Fallback font with similar metrics */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-display: swap;
}

/* Prevent text size adjust on mobile */
html {
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
}
7. DASHBOARD BUTTON FIX
css/* Developer dashboard specific */
.dashboard button,
.admin-panel button {
  /* Prevent jump on click */
  position: relative;
  overflow: hidden;
  isolation: isolate;
}

/* Modal/Dialog fixes */
.modal,
.dialog,
[role="dialog"] {
  /* Prevent body scroll without shift */
  position: fixed;
  inset: 0;
  overflow-y: auto;
  overscroll-behavior: contain;
}

/* When modal opens */
body:has(.modal:not([hidden])),
body:has([role="dialog"]:not([hidden])) {
  overflow: hidden;
  position: fixed;
  width: 100%;
}
8. SMOOTH LOADING STATES
css/* Smooth skeleton to content transition */
[data-loading="true"] {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

/* Content fade in */
[data-loaded="true"] {
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
9. REACT/FRAMEWORK SPECIFIC
jsx// Add to your main layout component
useLayoutEffect(() => {
  // Measure scrollbar width
  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  document.documentElement.style.setProperty('--scrollbar-width', `${scrollbarWidth}px`);
  
  // Prevent flicker on mount
  document.documentElement.classList.add('hydrated');
  
  return () => {
    document.documentElement.classList.remove('hydrated');
  };
}, []);

// Smooth page transitions
const router = useRouter();
useEffect(() => {
  const handleStart = () => document.body.classList.add('navigating');
  const handleComplete = () => document.body.classList.remove('navigating');
  
  router.events?.on('routeChangeStart', handleStart);
  router.events?.on('routeChangeComplete', handleComplete);
  
  return () => {
    router.events?.off('routeChangeStart', handleStart);
    router.events?.off('routeChangeComplete', handleComplete);
  };
}, [router]);
10. PERFORMANCE OPTIMIZATIONS
css/* Reduce repaints */
.animated-element {
  will-change: transform, opacity;
}

/* GPU acceleration for smooth animations */
.smooth {
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Disable all animations for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
IMMEDIATE IMPLEMENTATION:
Add this to your global CSS for instant improvement:
css/* Quick anti-flicker fix */
html {
  overflow-y: scroll;
  scrollbar-gutter: stable;
}

* {
  /* Prevent transform flickers */
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Smooth everything */
*, *::before, *::after {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* No layout shift */
img, video, iframe {
  max-width: 100%;
  height: auto;
  aspect-ratio: attr(width) / attr(height);
}
This comprehensive solution will eliminate flickers, jumps, and layout shifts across your entire application!