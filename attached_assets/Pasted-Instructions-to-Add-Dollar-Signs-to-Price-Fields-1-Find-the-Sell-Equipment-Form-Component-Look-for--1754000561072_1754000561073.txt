Instructions to Add Dollar Signs to Price Fields
1. Find the Sell Equipment Form Component
Look for the equipment submission form in:
client/src/pages/SellToUs.tsx
client/src/components/forms/EquipmentSubmissionForm.tsx
client/src/components/submissions/
2. Update the Asking Price Input Field
The current price input needs to be wrapped with a dollar sign prefix. Here's how to fix it:
Current Code (likely looks like this):
tsx<input
  type="number"
  name="askingPrice"
  placeholder="50"
  className="..."
/>
Update to:
tsx<div className="relative">
  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400">$</span>
  <input
    type="number"
    name="askingPrice"
    placeholder="50"
    className="pl-8 ..." // Add left padding to make room for $
  />
</div>
3. Create a Reusable Price Input Component
Create a new component for consistency across the app:
tsx// client/src/components/ui/PriceInput.tsx
export function PriceInput({ ...props }) {
  return (
    <div className="relative">
      <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none">
        $
      </span>
      <input
        type="number"
        step="0.01"
        min="0"
        {...props}
        className={`pl-8 ${props.className || ''}`}
      />
    </div>
  );
}
4. Search and Update All Price Fields
Run a global search for price-related inputs:

Search for: type="number" and check if it's a price field
Search for: price, cost, amount in input names
Common locations:

Product creation/edit forms
Checkout forms
Admin panels



5. Other Files to Check
Based on the codebase structure:
client/src/components/admin/ProductForm.tsx
client/src/components/products/
client/src/components/cart/
client/src/pages/Checkout.tsx
6. Styling Considerations
Ensure the dark theme styling works:
css/* For dark theme compatibility */
.price-input-wrapper {
  @apply relative;
}

.price-input-wrapper span {
  @apply absolute left-3 top-1/2 -translate-y-1/2 text-gray-400;
}

.price-input-wrapper input {
  @apply pl-8; /* Padding left for $ symbol */
}
7. Quick Fix for Immediate Implementation
If using Tailwind CSS inline styles, update the specific field:
tsx<div className="space-y-2">
  <label>Your Asking Price (Optional)</label>
  <div className="relative">
    <span className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
      <span className="text-gray-400">$</span>
    </span>
    <input
      type="number"
      step="0.01"
      placeholder="50"
      className="pl-7 pr-3 py-2 w-full bg-gray-800 border border-gray-700 rounded-md"
    />
  </div>
</div>
8. Additional Improvements

Add formatting for display prices (e.g., $50.00 instead of 50)
Consider using a currency input library for better UX
Add validation for proper decimal places
Format the "Expected selling/received number" display with a dollar sign too

This will ensure all price fields consistently show dollar signs throughout your application.