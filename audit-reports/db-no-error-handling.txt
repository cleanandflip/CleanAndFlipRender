server/config/health.ts-25-  try {
server/config/health.ts-26-    // Test database connection
server/config/health.ts:27:    await db.execute(sql`SELECT 1`);
server/config/health.ts-28-    checks.database = 'connected';
server/config/health.ts-29-  } catch (error) {
server/config/health.ts-30-    checks.database = 'disconnected';
server/config/health.ts-31-    overallStatus = 'not ready';
server/config/health.ts-32-  }
--
server/config/performance-test.ts-19-    logger.info('Testing database connection pool...');
server/config/performance-test.ts-20-    const dbStart = Date.now();
server/config/performance-test.ts:21:    await db.execute(sql`SELECT 1 as test`);
server/config/performance-test.ts-22-    const dbDuration = Date.now() - dbStart;
server/config/performance-test.ts-23-    tests.push({
server/config/performance-test.ts-24-      name: 'Database Connection Pool',
server/config/performance-test.ts-25-      duration: dbDuration,
server/config/performance-test.ts-26-      status: dbDuration < 100 ? 'EXCELLENT' : dbDuration < 500 ? 'GOOD' : 'NEEDS_IMPROVEMENT',
--
server/config/performance-test.ts-54-    logger.info('Testing search indexes...');
server/config/performance-test.ts-55-    const searchStart = Date.now();
