{
  "preferPaths": ["^shared/", "^server/services/", "^server/utils/", "^client/src/hooks/", "^client/src/lib/", "^client/src/components/"],
  "canonical": {
    "localityStatusApi": "server/services/localityService.ts",
    "localityShared": "shared/locality.ts",
    "geoShared": "shared/geo.ts",
    "availabilityShared": "shared/availability.ts",
    "cartRoute": "server/routes/cart.v2.ts",
    "cartService": "server/services/cartService.ts",
    "cartOwner": "server/utils/cartOwner.ts",
    "cartKeysClient": "client/src/lib/cartKeys.ts",
    "cartApiClient": "client/src/lib/cartApi.ts",
    "useCartClient": "client/src/hooks/useCart.ts",
    "useLocalityClient": "client/src/hooks/useLocality.ts",
    "fulfillmentShared": "shared/fulfillment.ts"
  },
  "pairs": [
    { "source": "server/routes/cart.ts",               "target": "server/routes/cart.v2.ts",              "reason": "legacy cart route" },
    { "source": "server/services/locality.ts",         "target": "server/services/localityService.ts",    "reason": "duplicated locality service" },
    { "source": "client/src/lib/locality.ts",          "target": "shared/locality.ts",                    "reason": "client duplicate of shared locality" },
    { "source": "src/lib/locality.ts",                 "target": "shared/locality.ts",                    "reason": "stray duplicate of shared locality" },
    { "source": "src/utils/distance.ts",               "target": "shared/geo.ts",                         "reason": "duplicate Haversine" },
    { "source": "src/lib/cartKeys.ts",                 "target": "client/src/lib/cartKeys.ts",            "reason": "duplicate query keys" },
    { "source": "server/utils/fulfillment.ts",         "target": "shared/fulfillment.ts",                 "reason": "logic should live in shared; utils should delegate only" },
    { "source": "server/services/email.ts",            "target": "server/utils/email.ts",                 "reason": "choose one; utilities-only" },
    { "source": "server/services/performanceMonitor.ts","target":"server/middleware/performance.ts",       "reason": "duplicate responsibility" },
    { "source": "server/services/cartGuard.ts",        "target": "server/routes/cart-validation.ts",       "reason": "overlapping validation logic; unify under service" },
    { "source": "server/utils/monitoring.ts",          "target": "server/services/systemMonitor.ts",      "reason": "monitoring duplicates" }
  ],
  "forbiddenImports": [
    { "name": "server/routes/cart", "message": "Legacy cart forbidden. Use server/routes/cart.v2.ts" },
    { "name": "server/lib/locality", "message": "Use server/services/localityService.ts or shared/locality.ts" },
    { "name": "server/lib/localityChecker", "message": "Merged into server/services/localityService.ts" },
    { "name": "server/locality/getLocalityForRequest", "message": "Use server/services/localityService.ts" },
    { "name": "client/src/hooks/use-cart", "message": "Use client/src/hooks/useCart.ts" },
    { "name": "src/lib/locality", "message": "Use shared/locality.ts" }
  ],
  "forbiddenPatterns": [
    "/api/cart(?!\\.v2)", "\\bisLocal\\(", "\\bisLocalMiles\\(", "res\\.cookie\\(['\"]sid['\"]", "document\\.cookie\\s*=\\s*['\"]sid"
  ]
}